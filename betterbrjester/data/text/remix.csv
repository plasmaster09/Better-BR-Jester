Name,Description,Image,ImageOffset,Rule Change,Apply On Continue
Random,A different rule change[;] chosen randomly.,_random,,,YES
Lady Luck,All enemy equipment is upgraded.,_ladyluck,-50|-22,Rules.upgradeenemyequipment = true;,YES
Wolf Puppy,Everyone starts with [fury]Fury[].|MQ: Everyone is [heal]Lucky.,wolfpuppy,0|0,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addplayerinnatestatus(~luck~); Rules.addenemyinnatestatus(~luck~);} else{Rules.addplayerinnatestatus(FURY[;] 1[;] true); Rules.addenemyinnatestatus(FURY[;] 1[;] true);},YES
Sorceress,Enemies can throw unused dice at you.|MQ: Everyone gains random statuses.,sorceress,0|0,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addextrascript(~if (target.hp > 0) {var statuslist = [FIRE[;] ICE[;] LOCK[;] SHOCK[;] WEAKEN[;] BLIND[;] CURSE[;] VANISH[;] FURY[;] DODGE[;] REDUCE]; var mystatus = rand(statuslist); inflictself(mystatus); inflict(mystatus); sfx(\~_\~ + mystatus.toLowerCase());}~[;] ~beforestartturn~);} else{Rules.enemiescanthrowdice = true;},YES
Drake,Enemies get 20% extra health.|MQ: Everyone survives one fatal blow.,vampire,-30|10,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addplayerinnatestatus(SURVIVE[;] 1[;] true); Rules.addenemyinnatestatus(SURVIVE[;] 1[;] true);} else{Rules.enemyhpadjust = 1.2;},YES
Scathach,You are [curse]Cursed[] each turn.|MQ: Everyone has 1 dice on turn 1.,scahatch,-60|-30,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addextrascript(~if (turn == 1) {self.extradice = 1 - self.dice; self.setvar(\~mqscathachremix\~[;] self.extradice); target.extradice = 1 - target.dice; target.setvar(\~mqscathachremix\~[;] target.extradice);} else {self.extradice -= self.getvar(\~mqscathachremix\~); self.setvar(\~mqscathachremix\~[;] 0); target.extradice -= target.getvar(\~mqscathachremix\~); target.setvar(\~mqscathachremix\~[;] 0);}~[;] ~beforestartturn~);} else{Rules.addplayerinnatestatus(CURSE);},YES
Loud Bird,Enemies will [dodge]Dodge[] your first|attack every turn. MQ: CAW!,loudbird,0|-50,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addextrascript(~if (chance(33)) {sfx(\~loudbirdscreech\~); screenshake();}~[;] ~beforestartturn~); Rules.addextrascript(~if (chance(25)) {sfx(\~loudbirdscreech\~); screenshake();}~[;] ~endturn~); Rules.addextrascript(~{sfx(\~loudbirdscreech\~); screenshake();}~[;] ~playerequipmentuse~); Rules.addextrascript(~if (rand([1|2]) == 1) {sfx(\~loudbirdscreech\~); screenshake();}~[;] ~enemyequipmentuse~);} else{Rules.addenemyinnatestatus(DODGE);},YES
Buster,Burning dice cost [heart]5[] hp. MQ: Item|use might also deal 2 fire damage.,dragon,-130|-60,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addextrascript(~if (chance(25)) {attack(2[;] FIRE); sfx(\~_fire\~);}~[;] ~playerequipmentuse~); Rules.addextrascript(~if (chance(25)) {attack(2[;] FIRE); sfx(\~_fire\~);}~[;] ~enemyequipmentuse~);} else{Rules.burningdicecost = 5;},YES
Snowman,One of your dice is always [ice]Frozen.|MQ: Fire is stronger[;] ice is weaker.,snowman,-10|-50,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){self.innate.push(~strongice~); self.innate.push(~weakfire~); Rules.addextrascript(~target.innate.push(\~strongice\~); target.innate.push(\~weakfire\~); new elements.Skill(\~mqelementalresistancefixboth\~).execute(self[;] target);~[;] ~startcombat~);} else{Rules.addplayerinnatestatus(ICE);},YES
Fireman,One of your dice is always [fire]Burning.|MQ: Ice is stronger[;] fire is weaker.,fireman,-20|-30,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){self.innate.push(~strongfire~); self.innate.push(~weakice~); Rules.addextrascript(~target.innate.push(\~strongfire\~); target.innate.push(\~weakice\~); new elements.Skill(\~mqelementalresistancefixboth\~).execute(self[;] target);~[;] ~startcombat~);} else{Rules.addplayerinnatestatus(FIRE);},YES
Singer,On your first turn[;] all dice are equal.|MQ: Everyone heals after 10 item uses.,singer,-20|0,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addplayerinnatestatus(~mqruleverse~[;] 1); Rules.addenemyinnatestatus(~mqruleverse~[;] 1);} else{Rules.addextrascript(~Rules.stackplayerdice([[rand([1[;]2[;]3[;]4[;]5[;]6])]][;] false[;] false);~[;] ~startcombat~);},YES
Vacuum,Enemies gain 10% health. MQ: Enemies|lose 25% health[;] but drain [heart]2 per attack.,vacuum,-100|50,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.enemyhpadjust = 0.75;  Rules.addenemyinnatestatus(~mqvacuumrule~);} else{Rules.enemyhpadjust = 1.1;},YES
Sticky Hands,Enemies have a chance to go first.|MQ: Lose [gold]4 gold.,stickyhands,-90|10,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){self.gold -= 4; if (self.gold < 0) self.gold = 0;} else{Rules.addextrascript(~var goesfirst = false; if((self.maxhp / self.hp) < 2) { goesfirst = chance(60); } else { goesfirst = chance(20); } if(goesfirst){ target.innate.push(\~goesfirst\~); }~[;] ~startcombat~);},YES
Mimic,Everything looks like a chest. MQ: A|random item is unavailable each turn.,mimic,,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addextrascript(~var myEquipment = []; if (self.equipment.length > 0) for (eq in self.equipment) if (eq.availablenextturn && eq.skillcard == \~\~) myEquipment.push(eq); if (myEquipment.length > 0) {var eq = rand(myEquipment); eq.availablenextturn = false; eq.unavailabledetails = [\~Disabled by:\~[;] \~Mimic rule\~];}~[;] ~startcombat~); Rules.addextrascript(~var myEquipment = []; var enemyEquipment = []; if (self.equipment.length > 0) for (eq in self.equipment) if (eq.availablenextturn && eq.skillcard == \~\~) myEquipment.push(eq); if (target.equipment.length > 0) for (eq in target.equipment) if (eq.availablenextturn && eq.skillcard == \~\~) enemyEquipment.push(eq); if (myEquipment.length > 0) {var eq = rand(myEquipment); eq.availablenextturn = false; eq.unavailabledetails = [\~Disabled by:\~[;] \~Mimic rule\~];} if (enemyEquipment.length > 0) {var eq = rand(enemyEquipment); eq.availablenextturn = false; eq.unavailabledetails = [\~Disabled by:\~[;] \~Mimic rule\~];}~[;] ~endturn~);} else{Rules.mimiccurse=true;},YES
Baby Squid,One of your dice is always [blind]Blinded.|MQ: All dice are [blind]Blinded on turn 1.,squid,30|0,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addplayerinnatestatus(~alternate_confuse~[;] 1[;] true); Rules.addplayerinnatestatus(~blind~[;] 1[;] true); Rules.addenemyinnatestatus(~alternate_confuse~[;] 1[;] true);} else{Rules.addplayerinnatestatus(BLIND);},YES
Haunted Jar,Poison no longer decreases each turn.|MQ: Poison increases by 1 each turn.,hauntedjar,0|0,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.playerpoisondelta = 1; Rules.addextrascript(~if (getstatusself(POISON) < 1) inflictself(POISON);~[;] ~beforestartturn~);} else{Rules.playerpoisondelta = 0; Rules.enemypoisondelta = 0;},YES
Paper Knight,Start with 2 extra dice. Lose 1 dice|each turn. MQ: [fire]Burn is doubled.,cardboardwarrior,-90|0,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addextrascript(~if (getstatusself(FIRE) > 0) inflictself(FIRE[;] getstatusself(FIRE));~[;] ~beforestartturn~); Rules.addextrascript(~if (getstatusself(FIRE) > 0) inflictself(FIRE[;] getstatusself(FIRE));~[;] ~endturn~);} else{Rules.addextrascript(~self.extradice = 3;~[;] ~startcombat~); Rules.addextrascript(~self.extradice--; if(self.dice + self.extradice < 1) self.extradice = 1- self.dice;~[;] ~beforestartturn~);},YES
Robobot,If your CPU counter exceeds the|target[;] take [heart]5[] damage.,robobot,-70|-50,Rules.robot_errorpenalty = 5;,YES
Dire Wolf,[curse]Curse[] odds are reduced to 25%.|MQ: [curse]Curse is doubled.,direwolf,-40|0,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addextrascript(~if (getstatusself(CURSE) > 0) inflictself(CURSE[;] getstatusself(CURSE));~[;] ~beforestartturn~); Rules.addextrascript(~if (getstatusself(CURSE) > 0) inflictself(CURSE[;] getstatusself(CURSE));~[;] ~endturn~);} else{Rules.curseodds = 25;},YES
Banshee,[curse]Curse[] reverses equipment targets.|MQ: Everyone is always badly [haunted]Haunted.,banshee,-20|0,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addplayerinnatestatus(~weirdhaunt~[;] 1); Rules.addplayerinnatestatus(~gainweirdhaunt~); Rules.addplayerinnatestatus(~possess~); Rules.addenemyinnatestatus(~possess~);} else{if(!Rules.hasalternate(~curse~)){Rules.setalternate(~curse~);} else{Rules.alternatestatus.remove(~curse~);}},YES
Madison,Enemies start [fury]Furied[]. MQ: Lose|[gold]12 gold. Gain [fury]Fury for 12 turns.,girlscout,-10|-30,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){self.gold -= 12; if (self.gold < 0) self.gold = 0; if (self.getvar(~mqmadisonfury~) == 0) self.setvar(~mqmadisonfury~[;] 12); Rules.addextrascript(~if (self.getvar(\~mqmadisonfury\~) > 0) {inflictself(FURY); sfx(\~_fury\~[;] \~\~[;] 0.2);} self.setvar(\~mqmadisonfury\~[;] self.getvar(\~mqmadisonfury\~) - 1); if (self.getvar(\~mqmadisonfury\~) <= 0) self.setvar(\~mqmadisonfury\~[;] -99); if (self.getvar(\~mqmadisonfury\~) > 0) inflictself(\~mqmadisonfury\~[;] self.getvar(\~mqmadisonfury\~));~[;] ~onstartturn~);} else{Rules.addenemyinnatestatus(FURY[;] 1[;] true);},YES
Bully,All enemies get a Rock.|MQ: All enemies get Fists.,bully,-50|-10,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addextrascript(~if (target.spaceleft() >= 2) giveenemyequipment(\~Fists\~[;] false[;] false);~[;] ~startcombat~);} else{Rules.addextrascript(~if(target.spaceleft() >= 1) {giveenemyequipment(\~Rock\~| false| false); }~[;] ~startcombat~);},YES
Skeleton,Lose a dice. MQ: 25% chance|to get [lock]1 Lock each turn.,skeleton,-20|-80,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addextrascript(~if (chance(25)) {inflictself(LOCK); sfx(\~_lock\~[;] \~\~[;] 0.2);}~[;] ~beforestartturn~); Rules.addextrascript(~if (chance(25)) {inflictself(LOCK); sfx(\~_lock\~[;] \~\~[;] 0.2);}~[;] ~endturn~);} else{self.dice--;},NO
Cornelius,Lose [heart]10[] max health.|MQ: Die after your 6th turn.,cornelius,0|-40,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addextrascript(~if (turn > 6) pierceattackself(self.hp);~[;] ~onstartturn~);} else{self.maxhp -= 10; if(self.hp > self.maxhp) { self.hp = self.maxhp; }},NO
Cowboy,Enemies always roll a 6. MQ:|Enemies are more likely to roll a 6.,cowboy,10|0,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.enemydicerange([1[;] 2[;] 3[;] 4[;] 5[;] 6[;] 6[;] 6[;] 6]);} else{Rules.stackenemydice([[6]][;] true[;] true[;] true);},YES
Handyman,[shock]Shocked[] equipment takes evens. MQ:|[shock]Shock costs health instead of dice.,handyman,-30|-10,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.setalternate(~shock~);} else{Rules.shocktype = ~EVEN~;},YES
Warlock,Status effects are different. MQ: The|boss enemy gets a blessing every turn.,warlock,-70|-50,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addextrascript(~if (target.level >= 6) {if (target.getvar(\~mqwarlockremix_script_injected\~) != 1) {target.setvar(\~mqwarlockremix_script_injected\~[;] 1); target.scriptbeforestartturn += \~ var blessings = [SHIELD[;] REDUCE[;] DODGE]; if (getstatusself(FURY) <= 0) blessings.push(FURY); var randomstatus = rand(blessings); var a = 1; if (randomstatus == SHIELD) a = 4; if (randomstatus == REDUCE) a = 2; inflictself(randomstatus[;] a); sfx(\\\~_\\\~ + randomstatus.toLowerCase()[;] \\\~\\\~[;] 0.2);\~;}}~[;] ~beforestartturn~);} else{for(x in [~poison~|~fire~|~ice~|~shock~|~thorns~|~fury~|~lock~|~blind~|~confuse~|~weaken~|~silence~|~shield~|~dodge~|~survive~|~reequipnext~|~reduce~|~dice_trigger_1~|~dice_trigger_2~|~dice_trigger_3~|~dice_trigger_4~|~dice_trigger_5~|~dice_trigger_6~|~counter_1~|~counter_2~|~counter_3~|~counter_4~|~counter_5~|~counter_6~|~curse~|~haunted~]){if(!Rules.hasalternate(x)){Rules.setalternate(x);} else{Rules.alternatestatus.remove(x);}}},YES
Alchemist,After 4 turns[;] all enemies transform|into bears. MQ: Transform into a bear.,potionmixer,-20|-70,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){beartransform(); giveequipment(~Bear Maul~); giveequipment(~Bear Maul~);} else{Rules.addenemyinnatestatus(~beartransform~[;] 4[;] true);},YES
Bounty Hunter,You will never roll a 6. MQ: Get|+[gold]1 gold if you win quickly.,bountyhunter,-20|0,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addextrascript(~if ((turn - 1) < 4) {self.gold++; sfx(\~stealgold\~); self.textparticle(\~[gold]+1!\~); screenshake();}~[;] ~aftercombat~);} else{Rules.playerdicerange([1[;]2[;] 3[;] 4[;] 5]);},YES
Rose,Everyone has +1 [sword]Extra Damage.|MQ: [thorns]Thorns drains health on attack.,rose,-20|-40,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.setalternate(THORNS);} else{Rules.bonusdamage = 1; Rules.addenemyinnatestatus(~extradamage~[;] 1[;] true); Rules.addplayerinnatestatus(~extradamage~[;] 1[;] true);},YES
Cactus,On victory[;] excessive damage is reflected.|MQ: Everyone gets [thorns]1 thorn per [shield]3 shield.,cactuswarrior,-20|0,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addextrascript(~if (getstatus(SHIELD) > 0) inflict(THORNS[;] getstatus(SHIELD) / 3);~[;] ~endturn~); Rules.addextrascript(~if (getstatus(SHIELD) > 0) inflict(THORNS[;] getstatus(SHIELD) / 3);~[;] ~onstartturn~);} else{Rules.addenemyinnatestatus(~reflectexcess~[;] 1[;] false);},YES
The Thief,Switch to [quote]Finders Keepers[quote] rules.,_thief,-90|-20,Rules.switchtofinderskeepers();,YES
Ned,All equipment you find is upgraded.,*anvil,-75|15,Rules.switchtoitllbefine();,YES
Slime,Start each fight with [poison]2 poison. MQ:|Fighters lose one dice when poisoned.,slime,10|-20,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){var scr = ~if (getstatusself(POISON) > 0 && self.getvar(\~mqslimeremix\~) != 1) {self.setvar(\~mqslimeremix\~[;] 1); self.extradice--;} else if (getstatusself(POISON) <= 0 && self.getvar(\~mqslimeremix\~) == 1) {self.setvar(\~mqslimeremix\~[;] 0); self.extradice++;}~; Rules.addextrascript(scr[;] ~beforestartturn~); Rules.addextrascript(scr[;] ~endturn~);} else{Rules.addplayerinnatestatus(POISON[;] 2[;] true); Rules.addextrascript(~if(turn == 1){ removestatusself(POISON[;] 1); pierceattackself(2|POISON); sfxdamage(self[;]2); sfx(\~_poison\~[;]\~\~[;]0.2); }~[;] ~onstartturn~);},YES
Wisp,All duplicate dice vanish. MQ: Roll an|extra die but get [vanish]Vanish + [haunted]Haunt.,wisp,20|-60,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addplayerinnatestatus(~ncr_vanish~); Rules.addplayerinnatestatus(~haunted~); self.extradice++;} else{Rules.addplayerinnatestatus(VANISH); Rules.addenemyinnatestatus(VANISH);},YES
Sneezy,It's like everyone's [haunted]Haunted. MQ:|When a countdown lowers[;] all do by 1.,sneezey,-20|-10,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addplayerinnatestatus(~mqsneezyrule~[;] 1); Rules.addenemyinnatestatus(~mqsneezyrule~[;] 1);} else{runscript(~diceydungeons/remixes/sneezy~);},YES
Val,At the start of each turn[;] replace one|of your items with a random item.,*tradingpost,-75|-80,runscript(~diceydungeons/remixes/val~);,YES
Yolanda,Shops can sell any item from the game.,*shop,-90|-60,Rules.mixedupshops();,YES
Rat King,Add two super enemies.|MQ: Everyone is weak to poison.,ratking,-60|-10,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){self.innate.push(~weakpoison~); Rules.addextrascript(~target.innate.push(\~weakpoison\~); new elements.Skill(\~mqelementalresistancefixboth\~).execute(self[;] target);~[;] ~startcombat~);} else{Rules.addsuperenemies(2);},YES
Kraken,Cannot see enemy health after turn 1.|MQ: All equipment is random on turn 1.,kraken,-80|-60,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addextrascript(~inflict(\~mqinsanity\~[;] 99); inflictself(\~mqinsanity\~[;] 99); new elements.Skill(\~mqinsanity\~).execute(self[;] target); new elements.Skill(\~mqinsanity\~).execute(target[;] self);~[;] ~startcombat~);} else{Rules.addextrascript(~if(turn == 1 && target.hp > 0) { inflict(\~cannotseeenemyhealth\~); sfx(\~_blind\~); }~[;] ~endturn~);},YES
Hothead,Sixes are automatically [fire]Burned. MQ:|All dice are [fire]Burning on turn 1.,hothead,-30|-20,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addextrascript(~inflict(FIRE[;] ALL); inflictself(FIRE[;] ALL);~[;] ~startcombat~);} else{Rules.ignitedice = true; Rules.igniterange = [6];},YES
Pirate,Everyone starts with [recycle]Re-Equip[]. MQ:|[recycle]Re-Equip regains dice[;] not items.,pirate,-40|-60,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.setalternate(REEQUIPNEXT);} else{Rules.addplayerinnatestatus(REEQUIPNEXT[;] 1[;] true); Rules.addenemyinnatestatus(REEQUIPNEXT[;] 1[;] true);},YES
Rotten Apple,Max hp no longer increases on level|up. MQ: Everyone loses 50% health.,applemimic,0|0,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.enemyhpadjust = 0.5; Rules.hpchangeonlevelup = 2; if (self.getvar(~rotten_apple_applied~) != 1) {self.hp /= 2; self.maxhp /= 2; self.setvar(~rotten_apple_applied~[;] 1);}} else{Rules.hpchangeonlevelup = 0;},YES
The Inventor,Reduce scrap choices to two. The|second choice is hidden.,_inventor,-90|-40,Rules.inventor_blindinspiration = true;,YES
Marshmallow,Swap all [fire]Fire equipment for [ice]Ice|equipment[;] and vice versa.,marshmallow,10|-10,var database = loaddata(~diceydungeons/remixes/marshmallow~); trace(database); for(eq in database) Rules.swap(eq.fire_equipment[;] eq.ice_equipment);,YES
Space Marine,Enemy countdowns reduce doubly.|MQ: Enemy rolls add up to 10.,spacemarine,-30|-10,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addextrascript(~var totaldice = (self.dice + self.extradice); var divvalue = 10 / totaldice; var newdice = []; for (i in 0...totaldice) newdice.push(divvalue); if ((totaldice % 2) != 0) newdice[0]++; if (totaldice <= 1) newdice = [6]; Rules.stackenemydice([newdice]);~[;] ~endturn~);} else{Rules.enemycountdownrate = 2;},YES
Wizard,All enemies get an extra dice.|MQ: All enemies get Hall of Mirrors.,wizard,-50|-20,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addextrascript(~if (target.spaceleft() >= 1) giveenemyequipment(\~Hall of Mirrors@enemy\~[;] false[;] false);~[;] ~startcombat~);} else{Rules.addextrascript(~target.extradice = 1;~[;] ~startcombat~);},YES
Beatrice,On turn 1[;] all your items are [shock]Shocked.|MQ: Everyone loses [heart]2 hp per [shock]Shock.,queenbee,-40|-30,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addextrascript(~if (getstatusself(SHOCK) > 0) {attackself(2 * getstatusself(SHOCK)[;] SHOCK); sfx(\~_shock\~);}~[;] ~beforestartturn~); Rules.addextrascript(~if (getstatusself(SHOCK) > 0) {attackself(2 * getstatusself(SHOCK)[;] SHOCK); sfx(\~_shock\~);}~[;] ~endturn~);} else{Rules.addplayerinnatestatus(SHOCK[;] 6[;] true);},YES
Keymaster,You have a six-move limit per turn. MQ:|Everyone must use dice in rolled order.,keymaster,-30|-40,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addplayerinnatestatus(~alternate_lock~[;] 99); Rules.addenemyinnatestatus(~alternate_lock~[;] 99);} else{Rules.movelimit = 6;},YES
Crystalina,Stash unused dice[;] losing [heart]1 hp per.|MQ: Everyone always has [reduce]Reduce 1.,crystalina,-10|0,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addplayerinnatestatus(REDUCE | 1); Rules.addenemyinnatestatus(REDUCE | 1);} else{Rules.addplayerinnatestatus(~crystalinaremix~[;]1[;]false);},YES
Frog,Any enemy can potentially be the|boss of the dungeon.,frog,-80|-40,runscript(~diceydungeons/remixes/frog~[;] loadtext(~diceydungeons/remixes/frog_excludelist~));,YES
The Witch,One spell slot contains a completely|random spell each turn.,_witch,-90|-30,runscript(~diceydungeons/remixes/thewitch~);,YES
Wicker Man,[fire]Burning dice disables equipment. MQ:|Enemies recover [heal]2 health every turn.,wickerman,10|-20,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addextrascript(~attack(-2); sfx(\~_heal\~);~[;] ~endturn~);} else{if(!Rules.hasalternate(~fire~)){Rules.setalternate(~fire~);} else{Rules.alternatestatus.remove(~fire~);}},YES
Yeti,Freeze reduces all dice by 1.|MQ: [ice]Freeze also inflicts [lock]Lock.,yeti,-60|0,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addplayerinnatestatus(~mqsubzero~); Rules.addenemyinnatestatus(~mqsubzero~);} else{if(!Rules.hasalternate(~ice~)){Rules.setalternate(~ice~);} else{Rules.alternatestatus.remove(~ice~);}},YES
Gardener,[weaken]Weaken gives [shock]Shock[;] which costs|hp. MQ: [weaken]Weaken boosts hp lost.,gardener,-60|-10,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.setalternate(~weaken~);} else{if(!Rules.hasalternate(~shock~)){Rules.setalternate(~shock~);} else{Rules.alternatestatus.remove(~shock~);} Rules.addplayerinnatestatus(~bindshocktoweaken~); Rules.addenemyinnatestatus(~bindshocktoweaken~);},YES
Drain Monster,When [poison]Poison deals damage[;] it also|inflicts [weaken]1 weaken.,sewermonster,0|0,Rules.addplayerinnatestatus(~bindweakentopoison~); Rules.addenemyinnatestatus(~bindweakentopoison~);,YES
Rhino Beetle,Lose [heart]2 hp each turn unless your|LB is full. MQ: Double attack damage.,beetlewarrior,-10|-50,if (levelupselections.indexOf(~InitialEquipment:MegaQuest Deck~) > -1){Rules.addextrascript(~inflictself(\~mqtimeruntilendcombat\~); var actDoubleDamage = new motion.actuators.SimpleActuator(null[;] 0[;] null); actDoubleDamage.repeat(-1); var funcDoubleDamage = new hscript.Parser().parseString(\~if (getstatusself(\\\~mqtimeruntilendcombat\\\~) <= 0 # self.hp <= 0 # target.hp <= 0) actDoubleDamage._repeat = 0; if (target.getvar(\\\~mqrhinobeetleremix_lasthp\\\~) > target.hp) {var dmg = target.getvar(\\\~mqrhinobeetleremix_lasthp\\\~) - target.hp; attack(dmg); sfxdamage(target[;] dmg);} target.setvar(\\\~mqrhinobeetleremix_lasthp\\\~[;] target.hp); if (self.getvar(\\\~mqrhinobeetleremix_lasthp\\\~) > self.hp) {var dmg = self.getvar(\\\~mqrhinobeetleremix_lasthp\\\~) - self.hp; attackself(dmg); sfxdamage(self[;] dmg);} self.setvar(\\\~mqrhinobeetleremix_lasthp\\\~[;] self.hp);\~); var interp = new hscript.Interp(); interp.variables.set(\~self\~[;] self); interp.variables.set(\~target\~[;] target); interp.variables.set(\~attack\~[;] attack); interp.variables.set(\~attackself\~[;] attackself); interp.variables.set(\~sfxdamage\~[;] sfxdamage); interp.variables.set(\~getstatusself\~[;] getstatusself); interp.variables.set(\~actDoubleDamage\~[;] actDoubleDamage); actDoubleDamage.onRepeat(interp.execute[;] [funcDoubleDamage]); actDoubleDamage.move();~[;] ~startcombat~);} else{Rules.addextrascript(~if(self.limitvalue < self.limitmax) attackself(2);~[;]~onstartturn~);},YES
Magician,At the start of your turn[;] change the|dice requirements for a random item.,streetmagician,-30|-60,runscript(~diceydungeons/remixes/magician~);,YES
The Robot,Switch to ~You Choose[;] You Lose~|rules.,_robot,-90|-20,runscript(~diceydungeons/remixes/therobot~);,YES
