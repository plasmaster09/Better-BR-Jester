Name,Description,Size,Script: On Execute,Gadget,Slots,NEED TOTAL?,Colour,Upgrade,Weaken,Alternate Status Trigger,SFX,Uses?,Cast Backwards?,Single use?,Tags,Witch Spell,Script: Before Combat,Script: After Combat,Script: Before Start Turn,Script: On Start Turn,Script: On any equipment use,Script: On any countdown reduce,Script: End Turn,Script: Before execute,Script: On Snap,Script: On Fury,Script: On Dodge
Classic Deck,4 Boops[;] 3 Bops|and 2 Sweets|Finale Card: Punchline,1,,,,,ORANGE,,,,,,,,excludefromrandomlists,,,,,addjestercard(~boop~); addjestercard(~boop~); addjestercard(~boop~); addjestercard(~boop~); addjestercard(~bop~); addjestercard(~bop~); addjestercard(~bop~); addjestercard(~sweets~); addjestercard(~sweets~); addjestercard(~punchline~); sfx(~jester_delete~); Deck.getcard(0).delete();,,,,,,,
Parallel Deck,4 Kapows[;] 3 Blammos|and 2 Sour Candies|Finale Card: Laugh Track,1,,,,,BLUE,,,,,,,,excludefromrandomlists,,,,,addjestercard(~kapow~); addjestercard(~kapow~); addjestercard(~kapow~); addjestercard(~kapow~); addjestercard(~blammo~); addjestercard(~blammo~); addjestercard(~blammo~); addjestercard(~sour candy~); addjestercard(~sour candy~); addjestercard(~laugh track~); sfx(~jester_delete~); Deck.getcard(0).delete();,,,,,,,
Elemental Deck,Flame Blast + 2 Sparks[;]|Ice Shatter + 2 Snowflakes[;]|High Voltage + 2 Buzzers|Finale Card: Tri Attack,1,,,,,RED,,,,,,,,excludefromrandomlists,,,,,addjestercard(~flame blast~); addjestercard(~spark~); addjestercard(~spark~); addjestercard(~ice shatter~); addjestercard(~snowflake~); addjestercard(~snowflake~); addjestercard(~high voltage~); addjestercard(~buzzer~); addjestercard(~buzzer~); addjestercard(~tri attack~); sfx(~jester_delete~); Deck.getcard(0).delete();,,,,,,,
MegaQuest Deck,4 Pews[;] 2 Bonks|and 3 Sweets|Finale Card: Rewind,1,,,,,YELLOW,,,,,,,,excludefromrandomlists,,,,,addjestercard(~pew~); addjestercard(~pew~); addjestercard(~pew~); addjestercard(~pew~); addjestercard(~bonk~); addjestercard(~bonk~); addjestercard(~sweets~); addjestercard(~sweets~); addjestercard(~sweets~); addjestercard(~rewind~); sfx(~jester_delete~); Deck.getcard(0).delete();,,,,,,,
Pew,Do [sword]2 damage[;] 33%|chance to get a dice,2,attack(2); var odds = 33; if (getstatusself(~luck~) > 0) odds *= 2; if (getstatusself(~luck+~) > 0) odds = 100; if (chance(odds)) {givedice(); self.textparticle(~Success!~);},,MAX3,,RED,change_power,decreaserange,,_damage,,,,,,,,,,,,,,,,
Pew_upgraded,Do [sword]2 damage[;] 66%|chance to get a dice,2,attack(2); var odds = 66; if (getstatusself(~luck~) > 0) odds *= 2; if (getstatusself(~luck+~) > 0) odds = 100; if (chance(odds)) {givedice(); self.textparticle(~Success!~);},,MAX3,,RED,,,,_damage,,,,,,,,,,,,,,,,
Bonk,Do [sword]3 damage[;] if already|used[;] do [sword]2x,2,var dmg = 3; if (getstatus(~mqbonk~) > 0) dmg *= 2; else {sfx(~_mana~); inflict(~mqbonk~);} attack(dmg);,,MIN4,,YELLOW,change_power,change_power,,_damage,,,,,,,,,,,,,,,,
Bonk_upgraded,Do [sword]3 damage[;] if already|used[;] do [sword]2x,2,var dmg = 3; if (getstatus(~mqbonk~) > 0) dmg *= 2; else {sfx(~_mana~); inflict(~mqbonk~);} attack(dmg); inflict(~mqbonk~);,,NORMAL,,YELLOW,,,,_damage,,,,,,,,,,,,,,,,
Bonk_downgraded,Do [sword]3 damage,2,attack(3); if (getstatus(~mqbonk~) <= 0) {sfx(~_mana~); inflict(~mqbonk~);},,MIN4,,YELLOW,,,,_damage,,,,,,,,,,,,,,,,
Alt Timeline Deck,4 Bangs[;] 3 Bloops|and 2 Candies|Finale Card: Astonish,1,,,,,PINK,,,,,,,,excludefromrandomlists,,,,,addjestercard(~bang~); addjestercard(~bang~); addjestercard(~bang~); addjestercard(~bang~); addjestercard(~bloop~); addjestercard(~bloop~); addjestercard(~bloop~); addjestercard(~candy~); addjestercard(~candy~); addjestercard(~astonish~); sfx(~jester_delete~); Deck.getcard(0).delete();,,,,,,,
Bang,Do [fire]2 damage|+ [fire]1 damage per [fire]Burn.,2,attack(getstatus(FIRE) + 2| FIRE); sfx(~_fire~);,,MAX4,,RED,change_power,change_power,,_fire,,,,,,,,,,,,,,,,
Bang_upgraded,Do [fire]2 damage|+ [fire]1 damage per [fire]Burn.|Return the dice.,2,attack(getstatus(FIRE) + 2| FIRE); givedice(d); sfx(~_fire~);,,MAX4,,RED,,,,_fire,,,,,,,,,,,,,,,,
Bang_downgraded,Do [fire]2 damage|+ [fire]1 damage per [fire]Burn.,2,attack(getstatus(FIRE) + 2| FIRE); sfx(~_fire~);,,MAX2,,RED,,,,_fire,,,,,,,,,,,,,,,,
Bloop,Do [dodge]2 damage[;]|and [dodge]1 damage next turn.,2,attack(2[;] DODGE); e.setvar(~bloop~[;] e.getvar(~bloop~) + 1); sfxdamage(target[;] 2);,,MIN2,,YELLOW,change_power,decreaserange,,_damage,,,,,,,e.setvar(~bloop~[;] 0);,,if(e.getvar(~bloop~) > 0){ attack(e.getvar(~bloop~)[;] DODGE); sfxdamage(target[;] 1); } e.setvar(~bloop~[;] 0);,,,,,,,
Bloop_upgraded,Do [dodge]2 damage[;]|and [dodge]2 damage next turn.,2,attack(2[;] DODGE); e.setvar(~bloop~[;] e.getvar(~bloop~) + 1); sfxdamage(target[;] 2);,,MIN2,,YELLOW,,,,_damage,,,,,,,e.setvar(~bloop~[;] 0);,,if(e.getvar(~bloop~) > 0){ attack(e.getvar(~bloop~) * 2[;] DODGE); sfxdamage(target[;] 2); } e.setvar(~bloop~[;] 0);,,,,,,,
Candy,Heal [heal]2. If above max hp[;]|convert excess to limit.,2,if(self.maxhp - self.hp == 0) { sfx(~_cure~); if(self.limitvalue != null && self.limitmax != null) { self.limitvalue += 2; if(self.limitvalue > self.limitmax) { self.limitvalue = self.limitmax; } } } else if(self.maxhp - self.hp == 1) { sfx(~_cure~); if(self.limitvalue != null && self.limitmax != null) { self.limitvalue += 1; if(self.limitvalue > self.limitmax) { self.limitvalue = self.limitmax; } } attackself(-1);} else {  attackself(-2); sfx(~_heal~); },,NORMAL,,GREEN,change_power,change_power,,_heal,,YES,,,,,,,,,,,,,,
Candy_upgraded,Heal [heal]3. If above max hp[;]|convert excess to limit.,2,if(self.maxhp - self.hp == 0) { sfx(~_cure~); if(self.limitvalue != null && self.limitmax != null) { self.limitvalue += 3; if(self.limitvalue > self.limitmax) { self.limitvalue = self.limitmax; } } } else if(self.maxhp - self.hp == 1) { sfx(~_cure~); if(self.limitvalue != null && self.limitmax != null) { self.limitvalue += 2; if(self.limitvalue > self.limitmax) { self.limitvalue = self.limitmax; } } attackself(-1);} else if(self.maxhp - self.hp == 2) { sfx(~_cure~); if(self.limitvalue != null && self.limitmax != null) { self.limitvalue += 1; if(self.limitvalue > self.limitmax) { self.limitvalue = self.limitmax; } } attackself(-2);} else {  attackself(-3); sfx(~_heal~); },,NORMAL,,GREEN,,,,_heal,,YES,,,,,,,,,,,,,,
Candy_downgraded,Heal [heal]1. If above max hp[;]|convert excess to limit.,2,if(self.maxhp - self.hp == 0) { sfx(~_cure~); if(self.limitvalue != null && self.limitmax != null) { self.limitvalue += 1; if(self.limitvalue > self.limitmax) { self.limitvalue = self.limitmax; } } } else {  attackself(-1); sfx(~_heal~); },,NORMAL,,GREEN,,,,_heal,,YES,,,,,,,,,,,,,,
Ouch,Do [sword]2 damage[;]|take [sword]1 damage,2,attack(2); attackself(1);,,NORMAL,,RED,change_power,change_power,,_damage,,,,,,,,,,,,,,,,
Ouch_upgraded,Do [sword]3 damage[;]|take [sword]1 damage,2,attack(3); attackself(1);,,NORMAL,,RED,,,,_damage,,,,,,,,,,,,,,,,
Ouch_downgraded,Do [sword]2 damage[;]|take [sword]2 damage,2,attack(2); attackself(2);,,NORMAL,,RED,,,,_damage,,,,,,,,,,,,,,,,
Plink,Do [sword]3 piercing damage[;]|inflict [shield]1 shield,2,pierceattack(3); inflict(SHIELD); sfx(~_shield~);,,MIN3,,YELLOW,change_power,change_power,,_damage,,,,,,,,,,,,,,,,
Plink_upgraded,Do [sword]4 piercing damage[;]|inflict [shield]1 shield,2,pierceattack(4); inflict(SHIELD); sfx(~_shield~);,,MIN3,,YELLOW,,,,_damage,,,,,,,,,,,,,,,,
Plink_downgraded,Do [sword]3 piercing damage[;]|inflict [shield]2 shield,2,pierceattack(3); inflict(SHIELD|2); sfx(~_shield~);,,MIN3,,YELLOW,,,,_damage,,,,,,,,,,,,,,,,
Expired Sweets,Gain [heal]3 health|but also [poison]1 poison,2,pierceattackself(-3); inflictself(POISON); sfx(~_poison~);,,NORMAL,,GREEN,change_power,change_power,,_heal,,YES,,,,,,,,,,,,,,
Expired Sweets_upgraded,Gain [heal]4 health|but also [poison]1 poison,2,pierceattackself(-4); inflictself(POISON); sfx(~_poison~);,,NORMAL,,GREEN,,,,_heal,,YES,,,,,,,,,,,,,,
Expired Sweets_downgraded,Gain [heal]3 health|but also [poison]2 poison,2,pierceattackself(-3); inflictself(POISON|2); sfx(~_poison~);,,NORMAL,,GREEN,,,,_heal,,YES,,,,,,,,,,,,,,
Terrible Deck,4 Ouches[;] 3 Plinks|and 2 Expired Sweets|Finale Card: Second Wind,1,,,,,GRAY,,,,,,,,excludefromrandomlists,,,,,addjestercard(~ouch~); addjestercard(~ouch~); addjestercard(~ouch~); addjestercard(~ouch~); addjestercard(~plink~); addjestercard(~plink~); addjestercard(~plink~); addjestercard(~expired sweets~); addjestercard(~expired sweets~); addjestercard(~second wind~); sfx(~jester_delete~); Deck.getcard(0).delete();,,,,,,,
Ping,In [jinx]1 turn[;] do [sword]3 dmg,2, jinx(~Ping~|~Deal [sword]3 damage~|~Deal [sword]3 damage~|~sfx(\~_blind\~|\~\~|0.2); attack(3); sfxdamage(null|3);~|target|self|1|3); sfx(~_thinghappens~);,,NORMAL,,PURPLE,change_power,change_power,,,,,,,,,,,,,,,,,,
Ping_upgraded,In [jinx]1 turn[;] do [sword]3 dmg|return this dice,2, jinx(~Ping~|~Deal [sword]3 damage~|~Deal [sword]3 damage~|~sfx(\~_blind\~|\~\~|0.2); attack(3); sfxdamage(null|3);~|target|self|1|3); sfx(~_thinghappens~); givedice(d);,,NORMAL,,PURPLE,,,,,,,,,,,,,,,,,,,,
Ping_downgraded,In [jinx]1 turn[;] do [sword]3 dmg,2, jinx(~Ping~|~Deal [sword]3 damage~|~Deal [sword]3 damage~|~sfx(\~_blind\~|\~\~|0.2); attack(3); sfxdamage(null|3);~|target|self|1|3); sfx(~_thinghappens~);,,MIN4,,PURPLE,,,,,,,,,,,,,,,,,,,,
Boom,In [jinx]2 turns[;] do [sword]5 dmg[;]|lower jinx counts by 2|on snap,2, jinx(~Boom~|~Deal [sword]5 damage~|~Deal [sword]5 damage~|~sfx(\~_fire\~|\~\~|0.1); sfx(\~_magic\~|\~\~|0.1); sfx(\~_dodge\~|\~\~|0.1); attack(5); sfxdamage(null|5);~|target|self|2|5); sfx(~_thinghappens~);,,MIN3,,PURPLE,change_power,change_power,,,,,,,,,,,,,,,,if (snap >=2) boostjinxcountdowns(self| 2); boostjinxcountdowns(target| 2);,,
Boom_upgraded,In [jinx]2 turns[;] do [sword]7 dmg[;]|lower jinx counts by 2|on snap,2, jinx(~Boom~|~Deal [sword]7 damage~|~Deal [sword]7 damage~|~sfx(\~_fire\~|\~\~|0.1); sfx(\~_magic\~|\~\~|0.1); sfx(\~_dodge\~|\~\~|0.1); sfx(\~_fire\~|\~\~|0.2); sfx(\~_magic\~|\~\~|0.2); sfx(\~_dodge\~|\~\~|0.2); attack(7); sfxdamage(null|7);~|target|self|2|7); sfx(~_thinghappens~);,,MIN3,,PURPLE,,,,,,,,,,,,,,,,,,if (snap >=2) attack(4); if (snap >=2) boostjinxcountdowns(self| 2); boostjinxcountdowns(target| 2);,,
Boom_downgraded,In [jinx]2 turns[;] do [sword]3 dmg[;]|lower jinx counts by 2|on snap,2, jinx(~Boom~|~Deal [sword]3 damage~|~Deal [sword]3 damage~|~sfx(\~_fire\~|\~\~|0.1); attack(3); sfxdamage(null|3);~|target|self|2|3); sfx(~_thinghappens~);,,MIN3,,PURPLE,,,,,,,,,,,,,,,,,,if (snap >=2) attack(1); if (snap >=2) boostjinxcountdowns(self| 2); boostjinxcountdowns(target| 2);,,
Patient Deck,3 Pings[;] 2 Concentrations[;]|2 Booms and 2 Hijinxes|Finale Card: Jinxploit,1,,,,,PURPLE,,,,,,,,excludefromrandomlists,,,,,addjestercard(~ping~); addjestercard(~ping~); addjestercard(~ping~); addjestercard(~boom~); addjestercard(~boom~); addjestercard(~concentration~); addjestercard(~concentration~); addjestercard(~hijinx~); addjestercard(~hijinx~); addjestercard(~jinxploit~); sfx(~jester_delete~); Deck.getcard(0).delete();,,,,,,,
Thief Deck,1 Dagger[;] 2 Poison Needles[;]|3 Doppeldice and 3 Graters|Finale Card: Thievery,1,,,,,GREEN,,,,,,,,excludefromrandomlists,,,,,addjestercard(~dаgger~); addjestercard(~poison needle~); addjestercard(~poison needle~); addjestercard(~doppeldice~); addjestercard(~doppeldice~); addjestercard(~doppeldice~); addjestercard (~grater~); addjestercard(~grater~); addjestercard(~grater~); addjestercard(~thievery~); sfx(~jester_delete~); Deck.getcard(0).delete();,,,,,,,
Dаgger,Do [sword]<d6> damage|On Snap[;] get cursed|[gray](Reuseable),1,attack(d);,,MAX3,,RED,add1,complicate,,_damage,-1,,,,,,,,,,,,,inflictself(~curse~ | 99);,,
Grater,Shred dice[;] 33% chance|to take [sword]<d6> damage,1,givedice(split(d[;] rand([2[;] 3[;] 4]))[;] ~splitdice~); if (chance(33)) {attackself(d); sfxdamage(self[;] d);},,EVEN,,GREEN,change_power,change_power,,_metals,,YES,,,,,,,,,,,,,,
Grater_upgraded,Shred dice[;] 33% chance|to take [sword]<d6> damage,1,givedice(split(d[;] rand([2[;] 3[;] 4]))[;] ~splitdice~); if (chance(33)) {attackself(d); sfxdamage(self[;] d);},,MIN2,,GREEN,,,,_metals,,YES,,,,,,,,,,,,,,
Grater_downgraded,Shred dice[;] 66% chance|to take [sword]<d6> damage,1,givedice(split(d[;] rand([2[;] 3[;] 4]))[;] ~splitdice~); if (chance(66)) {attackself(d); sfxdamage(self[;] d);},,EVEN,,GREEN,,,,_metals,,YES,,,,,,,,,,,,,,
Random Deck,4 Robots[;] 2 Inventors|and 3 Inventor?s|Finale Card: Randomizer,1,,,,,WHITE,,,,,,,,excludefromrandomlists,,,,,addjestercard(~call for backup robot~); addjestercard(~call for backup robot~); addjestercard(~call for backup robot~); addjestercard(~call for backup robot~); addjestercard(~call for backup inventor~); addjestercard(~call for backup inventor~); addjestercard(~call for backup inventor?~); addjestercard(~call for backup inventor?~); addjestercard(~call for backup inventor?~); addjestercard(~randomizer~); sfx(~jester_delete~); Deck.getcard(0).delete();,,,,,,,
Randomizer,Triple Seven|Get a random|upgraded item,2,/*$var eq = rand(getequipmentlist(null|[]|[~skillcard~|~excludefromrandomlists~|~robotonly~|~witchonly~|~onceperbattle~|~alternateversion~])); var modifier = ~~; replacemewith(eq + ~+~| -1);$*/,Reversal,,,WHITE,,,,,,YES,,excludefromrandomlists|powercard|finale,,,,,,,,,,,,
Tri Attack,Inflict [shock] shock[;]|[fire] burn[;] and [ice] freeze[;]|and do 1 damage of each,1,inflict(SHOCK); inflict(ICE); inflict(FIRE); attack(1 | FIRE); attack(1 | ICE); attack(1 | SHOCK);,Oh No!,COUNTDOWN,12,YELLOW,change_power,change_power,,,,,,finale,,,,,,,,,,,,
Tri Attack_upgraded,Inflict [shock]2 shock[;]|[fire]2 burn[;] [ice]2 freeze[;]|and do 2 damage of each,1,inflict(SHOCK| 2); inflict(ICE| 2); inflict(FIRE| 2); attack(2 | FIRE); attack(2 | ICE); attack(2 | SHOCK);,Oh No!,COUNTDOWN,12,YELLOW,,,,,,,,finale,,,,,,,,,,,,
Tri Attack_downgraded,Inflict [shock] shock[;]|[fire] burn[;] or [ice] freeze[;]|do 1 damage of that element,1,var randstatus = rand([SHOCK|FIRE|ICE]); inflict(randstatus|1); sfx(~_~ + randstatus.toLowerCase()|~~|0.2); attack(1 | randstatus);,Oh No!,COUNTDOWN,12,YELLOW,,,,,,,,finale,,,,,,,,,,,,
Astonish,Inflict [vanish]vanish|and [weaken]2 weaken,2,inflict(~vanish~); inflict(WEAKEN | 2); sfx(~_vanish~);,Haunt,COUNTDOWN,12,PURPLE,threequartercountdown,noeffect,,_curse,,,,finale,,,,,,,,,,,,
Jinxploit,Do [sword]2 and heal|[heal]1 for each [jinx]jinx[;]|then return the dice,2,var jinxcount = getjinx(self) + getjinx(target); if(jinxcount == 0) { target.textparticle(~No effect!~); givedice(d); } else{ attack(jinxcount * 2); pierceattackself(-jinxcount); givedice(d); sfxdamage(target|jinxcount * 2); },,RANGE25,,PINK,change_power,change_power,,,,,,finale,,,,,,,,,,,,var jinxcount = getjinx(self) + getjinx(target); if(jinxcount == 0) { target.textparticle(~No effect!~); givedice(d); } else{ givedice(d); sfxdamage(target|jinxcount * 2); }
Jinxploit_upgraded,Do [sword]3 and heal|[heal]1 for each [jinx]jinx[;]|then return the dice,2,var jinxcount = getjinx(self) + getjinx(target); if(jinxcount == 0) { target.textparticle(~No effect!~); givedice(d); } else{ attack(jinxcount * 3); pierceattackself(-jinxcount); givedice(d); sfxdamage(target|jinxcount * 2); },,RANGE25,,PINK,,,,,,,,finale,,,,,,,,,,,,var jinxcount = getjinx(self) + getjinx(target); if(jinxcount == 0) { target.textparticle(~No effect!~); givedice(d); } else{ givedice(d); sfxdamage(target|jinxcount * 2); }
Jinxploit_downgraded,Do [sword]1 and heal|[heal]1 for each [jinx]jinx[;]|then return the dice,2,var jinxcount = getjinx(self) + getjinx(target); if(jinxcount == 0) { target.textparticle(~No effect!~); givedice(d); } else{ attack(jinxcount); pierceattackself(-jinxcount); givedice(d); sfxdamage(target|jinxcount * 2); },,RANGE25,,PINK,,,,,,,,finale,,,,,,,,,,,,var jinxcount = getjinx(self) + getjinx(target); if(jinxcount == 0) { target.textparticle(~No effect!~); givedice(d); } else{ givedice(d); sfxdamage(target|jinxcount * 2); }
Thievery,Phantom Theft|Borrow upgraded equipment,2,//$var enemyequipment = []; for (eq in target.equipment){ if(!eq.hastag(~cannotsteal~)){ enemyequipment.push(eq);}} if(enemyequipment.length > 0){var randomequipment = rand(enemyequipment); replacemewith(randomequipment.name + ~+~); }$,Steal,,,GREEN,,,,,,,,excludefromrandomlists|cannotsteal|powercard|finale,,,,,,,,,,,,
Second Wind,Survive[;] exhausted[;]|for three turns...|[gray](once per battle),1,inflictself(~alternate_survive~); self.extradice--;,Protection,COUNTDOWN,8,WHITE,threequartercountdown,noeffect,,,,YES,YES,finale,,,,,,,,,,,,
Repeater,Do [sword]<d6> damage[;] repeat|for each countdown reduce|([fury]<evar:repeaterfury> total),1,attack(d); sfx(~_metals~); if (!simulation) {if (e.getvar(~repeaterfury~) > 0) {e.show = true; e.y = 720; e.doequipmentaction(self[;] target[;] (self.isplayer ? e.castdirection : (e.castdirection == 1 ? 0 : 1))[;] e.assigneddice); e.setvar(~repeaterfury~[;] e.getvar(~repeaterfury~) - 1);}},Shuriken,MAX2,,RED,increaserange,decreaserange,,_damage,,,,,,e.setvar(~repeaterfury~[;] 0);,e.setvar(~repeaterfury~[;] 0);,e.setvar(~repeaterfury~[;] 0);,,,e.setvar(~repeaterfury~[;] e.getvar(~repeaterfury~) + 1);,,,,e.preventdefault = true; e.maintainfury = true;,
Void Cannon,Do [sword]8 damage for each|dice you are missing|Regain missing dice,2,var dmg = 0; if (self.extradice < 0) {dmg = 8 * -self.extradice; self.extradice = 0;} attack(dmg);,Plasma Gun,EVEN,,PURPLE,change_power,complicate,,_damage,,,,,,,,,,,,,,,,
Void Cannon_upgraded,Do [sword]10 damage for each|dice you are missing|Regain missing dice,2,var dmg = 0; if (self.extradice < 0) {dmg = 10 * -self.extradice; self.extradice = 0;} attack(dmg);,Plasma Gun,EVEN,,PURPLE,,,,_damage,,,,,,,,,,,,,,,,
Antimatter,-1 dice to self|this battle,1,if (simulation) {bonus(-1000);} else {self.extradice--; if ((self.dice + self.extradice) < 0) self.extradice = 1 - self.dice;},Black Hole,ODD,,PURPLE,simplify,complicate,,_curse,,YES,,,,,,,,,,,,,,
Thruster,Reduce countdowns by 5,1,boostcountdowns(5);,Accelerate,COUNTDOWN,3,RED,change_power,change_power,,useitem,,YES,,,,,,,,,,,,,,
Thruster_upgraded,Reduce countdowns by 6,1,boostcountdowns(6);,Accelerate,COUNTDOWN,3,RED,,,,useitem,,YES,,,,,,,,,,,,,,
Thruster_downgraded,Reduce countdowns by 3,1,boostcountdowns(3);,Accelerate,COUNTDOWN,3,RED,,,,useitem,,YES,,,,,,,,,,,,,,
Energy Drink,Boost Limit Break|by 75%,1,self.limitvalue += self.limitmax * 0.75; if (self.limitvalue > self.limitmax) self.limitvalue = self.limitmax;,Focus,COUNTDOWN,12,YELLOW,threequartercountdown,change_power,,_cure,,YES,,,,,,,,,,,,,,
Energy Drink_downgraded,Boost Limit Break|by 50%,1,self.limitvalue += self.limitmax * 0.5; if (self.limitvalue > self.limitmax) self.limitvalue = self.limitmax;,Focus,COUNTDOWN,12,YELLOW,,,,_cure,,YES,,,,,,,,,,,,,,
Accumulator,Do [sword]<d6> damage[;] triple|if limit is ready,1,var dmg = d; if (self.limitready()) dmg *= 3; attack(dmg);,Battery,MAX3,,YELLOW,increaserange,decreaserange,,_damage,,,,,,,,,,,,,,,,
Armor Shard,Gain [thorns]<d6> thorns,2,inflictself(THORNS[;] d);,Needle,MAX4,,GREEN,increaserange,complicate,,_thorns,,YES,,,,,,,,,,,,,,
Magnet,Do [sword]<d6> damage[;] return the|dice if 1 left this fight,1,attack(d); if ((self.dice + self.extradice) == 1) givedice(d);,Plasma Gun,MAX5,,PURPLE,simplify,complicate,,_damage,,,,,,,,,,,,,,,,
Duplicake,Duplicate a dice|Recover [heal]2 health,1,givedice([d[;] d]); attackself(-2);,Clone Device,MIN5,,GREEN,increaserange,decreaserange,,_heal,,YES,,,,,,,,,,,,,,
Lights Out,-1 dice to both|(1 minimum),1,if (!simulation) {if ((self.dice + self.extradice) > 1) self.extradice--; if ((target.dice + target.extradice) > 1) target.extradice--;} else bonus(500);,Black Hole,DOUBLES|DOUBLES,,PURPLE,change_requirements,change_power,,_blind,,YES,,,,,,,,,,,,,,
Lights Out_upgraded,-1 dice to both|(1 minimum),1,if (!simulation) {if ((self.dice + self.extradice) > 1) self.extradice--; if ((target.dice + target.extradice) > 1) target.extradice--;} else bonus(500);,Black Hole,COUNTDOWN,10,PURPLE,,,,_blind,,YES,,,,,,,,,,,,,,
Lights Out_downgraded,-1 dice to both|(1 minimum),1,if (!simulation) {if ((self.dice + self.extradice) > 1) self.extradice--; if ((target.dice + target.extradice) > 1) target.extradice--;} else bonus(500);,Black Hole,REQUIRE6|REQUIRE6,,PURPLE,,,,_blind,,YES,,,,,,,,,,,,,,
Reload,Reduce countdowns by 3|[gray](Reuseable),1,boostcountdowns(3);,Accelerate,NORMAL,,GREEN,change_power,complicate,,useitem,2,YES,,,,,,,,,,,,,,
Reload_upgraded,Reduce countdowns by 3|[gray](Reuseable),1,boostcountdowns(3);,Accelerate,NORMAL,,GREEN,,,,useitem,3,YES,,,,,,,,,,,,,,
Special Attack,Do [sword]12 damage|if limit is ready,2,if (self.limitready()) {attack(12); sfxdamage(target[;] 12);} else {target.textparticle(~No effect!~); sfx(~_dodge~);},Battery,COUNTDOWN,7,YELLOW,halfcountdown,change_power,,,,,,,,,,,,,,,,,,
Special Attack_downgraded,Do [sword]6 damage|if limit is ready,2,if (self.limitready()) {attack(6); sfxdamage(target[;] 6);} else {target.textparticle(~No effect!~); sfx(~_dodge~);},Battery,COUNTDOWN,7,YELLOW,,,,,,,,,,,,,,,,,,,,
Spiky Armor,Block [shield]<d6> damage|Gain [thorns]1 thorns,1,inflictself(SHIELD[;] d); inflictself(THORNS[;] 1);,Protection,MAX3,,ORANGE,change_power,change_power,,_shield,,YES,,,,,,,,,,,,,,
Spiky Armor_upgraded,Block [shield]<d6> damage|Gain [thorns]2 thorns,1,inflictself(SHIELD[;] d); inflictself(THORNS[;] 2);,Protection,MAX3,,ORANGE,,,,_shield,,YES,,,,,,,,,,,,,,
Spiky Armor_downgraded,Block [shield]<d6> damage,1,inflictself(SHIELD[;] d);,Protection,MAX3,,ORANGE,,,,_shield,,YES,,,,,,,,,,,,,,
Judgenudge,Dice value -1|[curse]Curse on 1,1,if (d > 1) givedice(d - 1); if (d == 1) {inflict(CURSE); bonus(500); sfx(~_curse~[;] ~~[;] 0.2);},Meganudge,NORMAL,,PURPLE,change_power,change_power,,,,,,,,,,,,,,,,,,
Judgenudge_upgraded,Dice value -1|[curse]Curse on 6,1,if (d > 1) givedice(d - 1); if (d == 6) {inflict(CURSE); bonus(500); sfx(~_curse~[;] ~~[;] 0.2);},Meganudge,NORMAL,,PURPLE,,,,,,,,,,,,,,,,,,,,
Judgenudge_downgraded,Dice value -1,1,if (d > 1) givedice(d - 1);,Meganudge,NORMAL,,PURPLE,,,,,,,,,,,,,,,,,,,,
Stunula,Flip a dice upside down|[shock]Shocks the enemy on 6,1,givedice(7 - d); if (d == 6) {inflict(SHOCK); sfx(~_shock~);},Zap,NORMAL,,YELLOW,change_power,change_power,,,,YES,,,,,,,,,,,,,,
Stunula_upgraded,Flip a dice upside down|[shock]Shocks the enemy on 1,1,givedice(7 - d); if (d == 1) {inflict(SHOCK); sfx(~_shock~);},Zap,NORMAL,,YELLOW,,,,,,YES,,,,,,,,,,,,,,
Stunula_downgraded,Flip a dice upside down,1,givedice(7 - d);,Zap,NORMAL,,YELLOW,,,,,,YES,,,,,,,,,,,,,,
Bumpspade,Dice value +1|[weaken]Weaken on 1,1,givedice(d + 1); if (d == 1) {inflict(WEAKEN); sfx(~_weaken~[;] ~~[;] 0.2);},Megabump,NORMAL,,ORANGE,change_power,change_power,,,,,,,,,,,,,,,,,,
Bumpspade_upgraded,Dice value +1|[weaken]Weaken on 6,1,givedice(d + 1); if (d == 6) {inflict(WEAKEN); sfx(~_weaken~[;] ~~[;] 0.2);},Megabump,NORMAL,,ORANGE,,,,,,,,,,,,,,,,,,,,
Bumpspade_downgraded,Dice value +1,1,givedice(d + 1);,Megabump,NORMAL,,ORANGE,,,,,,YES,,,,,,,,,,,,,,
Rigged Roll,Set all dice to|[quote]something other than <d6>[quote],1,if (simulation) bonus(10); else {var values = [1[;] 2[;] 3[;] 4[;] 5[;] 6]; values.remove(d); var value = rand(values); var c = 0; for (mydice in self.dicepool) if (mydice.available()) {mydice.animatereroll(value[;] self.screenposition()[;] c * 0.05); c++;}},Replicate,ODD,,GREEN,simplify,change_power,,diceroll,,YES,,,,,,,,,,,,,,
Rigged Roll_downgraded,Set all dice to|[quote]something other than <slotdoubles>[quote],1,if (simulation) bonus(10); else {var values = [1[;] 2[;] 3[;] 4[;] 5[;] 6]; values.remove(d); var value = rand(values); var c = 0; for (mydice in self.dicepool) if (mydice.available()) {mydice.animatereroll(value[;] self.screenposition()[;] c * 0.05); c++;}},Replicate,DOUBLES|DOUBLES,,GREEN,,,,diceroll,,YES,,,,,,,,,,,,,,
Hot Couple,Roll two <d6>s[;] one of|them catches on [fire]fire,2,inflictself(FIRE); givedice([d[;] d]);,Clone Device,MIN4,,RED,simplify,complicate,,,,YES,,,,,,,,,,,,,,
Lightsaber,Do [sword]<d6> damage|Lock on 6,2,attack(d); if (d >= 6) inflict(LOCK); sfx(~_lock~[;] ~~[;] 0.2);,Plasma Gun,NORMAL,,PURPLE,change_power,change_power,,_damage,,,,,,,,,,,,,,,,
Lightsaber_upgraded,Do [sword]<d6> damage|Lock on even,2,attack(d); if ((d % 2) == 0) inflict(LOCK); sfx(~_lock~[;] ~~[;] 0.2);,Plasma Gun,NORMAL,,PURPLE,,,,_damage,,,,,,,,,,,,,,,,
Shield of Cthulhu,Block [shield]<d6> damage|Do [sword]<double> damage,2,inflictself(SHIELD[;] d); attack(d * 2); sfxdamage(target[;] d * 2);,Protection,MAX3,,ORANGE,change_power,decreaserange,,_shield,,,,,,,,,,,,,,,,
Shield of Cthulhu_upgraded,Block [shield]<d6> damage|Do [sword]6 damage,2,inflictself(SHIELD[;] d); attack(6); sfxdamage(target[;] 6);,Protection,MAX3,,ORANGE,,,,_shield,,,,,,,,,,,,,,,,
Rewind,Activate all equipment that|was used this turn,2,if (!simulation) {var width = []; for (i in 0...(3840 - 792)) width.push(i); var c = 0; for (eq in self.equipment) if (eq.skillcard == ~~ && eq.name != e.name && !eq.ready) {eq.x = rand(width); eq.y = (self.isplayer ? (e.castdirection == 1 ? -e.height : 2160) : (e.castdirection == 1 ? 2160 : -e.height)); eq.show = true; eq.doequipmentaction(self[;] target[;] (self.isplayer ? 1 : -1)[;] eq.assigneddice[;] 0.3 * c); c++;}} else {bonus(100);},Time Stop,COUNTDOWN,15,ORANGE,halfcountdown,noeffect,,,,YES,,finale,,,,,,,,,,,,
Magician's Secret,On the next turn|roll an extra dice,1,inflictself(~stash~ + rand([1[;] 2[;] 3[;] 4[;] 5[;] 6])); inflictself(~illuminate~);,Random Roll,ODD,,PINK,change_power,change_power,,_thinghappens,,YES,,,,,,,,,,,,,,
Magician's Secret_upgraded,Roll an extra dice[;]|return this dice,1,givedice(); givedice(d);,Random Roll,ODD,,PINK,,,,,,YES,,,,,,,,,,,,,,
Magician's Secret_downgraded,Reroll a dice,1,givedice();,Random Roll,ODD,,PINK,,,,,,YES,,,,,,,,,,,,,,
Shattered Mirror,Each turn[;] roll an extra|<d6> and take [sword]1 damage,1,var _d = d; if (_d < 1) _d = 1; if (_d > 6) _d = 6; inflictself(~mqshadow~ + _d);,Clone Device,NORMAL,,PURPLE,change_power,change_power,,_blind,,YES,,,,,,,,,,,,,,
Shattered Mirror_upgraded,[]+1 dice this fight,1,self.extradice++;,Clone Device,REQUIRE6,,PURPLE,,,,magic_gaindice,,YES,,,,,,,,,,,,,,
Shattered Mirror_downgraded,Each turn[;] roll an extra|<d6> and take [sword]1 damage,1,var _d = d; if (_d < 1) _d = 1; if (_d > 6) _d = 6; inflictself(~mqshadow~ + _d);,Clone Device,MAX3,,PURPLE,,,,_blind,,YES,,,,,,,,,,,,,,
Ladder,Flip the dice[;] then +1 |value to the result,1,var ladder = 7-d; givedice((ladder + 1)); var sfx = rand([1[;]2[;]3[;]4]); sfx(~diceroll~ + sfx);,Megabump,MAX3,,ORANGE,change_power,change_power,,,,YES,,,,,,,,,,,,,,
Ladder_upgraded,Flip the dice[;] then +1 |value to the result|,1,var ladder = 7-d; givedice((ladder + 1)); var sfx = rand([1[;]2[;]3[;]4]); sfx(~diceroll~ + sfx);,Megabump,MAX3,,ORANGE,,,,,2,YES,,,,,,,,,,,,,,
Chute,Flip the dice[;] but give|two copies of the result,1,var chute = 7-d; givedice(chute); givedice(chute); var sfx = rand([1[;]2[;]3[;]4]); sfx(~diceroll~ + sfx);,Meganudge,MIN4,,GREEN,change_power,change_power,,,,YES,,,,,,,,,,,,,,
Chute_upgraded,Flip the dice[;] but give|two copies of the result|,1,var chute = 7-d; givedice(chute); givedice(chute); var sfx = rand([1[;]2[;]3[;]4]); sfx(~diceroll~ + sfx);,Meganudge,MIN4,,GREEN,,,,,2,YES,,,,,,,,,,,,,,
Chute_downgraded,Flip the dice[;] but give|two copies of the result,1,var chute = 7-d; givedice(chute); givedice(chute); var sfx = rand([1[;]2[;]3[;]4]); sfx(~diceroll~ + sfx);,Meganudge,REQUIRE6,,GREEN,,,,,,YES,,,,,,,,,,,,,,
Ladder_downgraded,Flip the dice[;] then +1 |value to the result,1,var ladder = 7-d; givedice((ladder + 1)); var sfx = rand([1[;]2[;]3[;]4]); sfx(~diceroll~ + sfx);,Megabump,RANGE23,,ORANGE,,,,,,YES,,,,,,,,,,,,,,
Rusty Cauldron,Do [dice]1 damage[;] -1 |dice value[;] [dice] = 5[;] roll a 1,1,attack(1); givedice(d - 1); if(d == 5) { givedice(1); bonus(500); },Magic Dice,MIN2,,GRAY,change_power,decreaserange,,,,,,,,,,,,,,,,,,
Rusty Cauldron@breaking_upgraded,Do [shield]1 damage[;] Split dice|[gray](2 uses left),1,pierceattack(1); givedice(split(d)[;] ~splitdice~); giveequipment(~Rusty Cauldron@broken+~[;] true[;] false[;] e);,,NORMAL,,GRAY,,,,,,,,,,,,,,,,,,,,
Rusty Cauldron@broken_upgraded,Do [shield]1 damage[;] Split dice|[gray](1 use left),1,pierceattack(1); givedice(split(d)[;] ~splitdice~);,,NORMAL,,GRAY,,,,,,,,,,,,,,,,,,,,
Rusty Cauldron_upgraded,Do [dice]1 damage[;] split|dice[;] [dice] = 5[;] roll a 1,1,attack(1); givedice(split(d)[;] ~splitdice~); if(d == 5) { givedice(1); },Magic Dice,NORMAL,,GRAY,,,,,,,,,,,,,,,,,,,,
Rusty Cauldron_downgraded,Do [sword]1 damage|,1,attack(1);,,MIN2,,GRAY,,,,,-1,,,,,,,,,,,,,,,
Rusty Cauldron@breaking_downgraded,Do [shield]1 damage|,1,pierceattack(1);,,MIN2,,GRAY,,,,,-1,,,,,,,,,,,,,,,
Rusty Cauldron@broken_downgraded,Do [shield]1 damage|,1,pierceattack(1);,,MIN2,,GRAY,,,,,-1,,,,,,,,,,,,,,,
Shiny Cauldron,Do [confuse]1 damage.|Double dice value.,1,attack(1[;] CONFUSE); givedice(d * 2[;] ~combinedice~);,Magic Dice,MAX5,,YELLOW,simplify,decreaserange,,,,,,,,,,,,,,,,,,
H4mm3r,On 8[;] inflict [shock]Shock.|Deal [shock]<d6> damage.,2,if(d == 8) { inflict(SHOCK); attack(d[;] SHOCK); sfx(target[;] d); sfx(~_shock~); bonus(500); } else if(getstatus(SHOCK) >= 1) { attack(d[;] SHOCK); sfx(target[;] d); } else { attack((d / 2)[;] SHOCK); sfx(target[;] d/2); },Jackhammer,MAX5|MAX5,,YELLOW,simplify,change_power,,,,,,,,,,,,,,,,,,
H4mm3r_upgraded,On 8[;] inflict [shock]Shock.|Deal [shock]<d6> damage.,2,if(d == 8) { inflict(SHOCK); attack(d[;] SHOCK); sfx(target[;] d); sfx(~_shock~); bonus(500); } else if(getstatus(SHOCK) >= 1) { attack(d[;] SHOCK); sfx(target[;] d); } else { attack((d / 2)[;] SHOCK); sfx(target[;] d/2); },Jackhammer,NORMAL|NORMAL,,YELLOW,,,,,,,,,,,,,,,,,,,,
Stew,Do [sword]1 damage[;]|get a new dice,1,attack(1); givedice();,Random Roll,COUNTDOWN,3,PURPLE,change_power,change_power,,_damage,,,,,,,,,,,,,,,,
Stew_upgraded,Do [sword]2 damage[;]|get a new dice,1,attack(2); givedice();,Random Roll,COUNTDOWN,3,PURPLE,,,,_damage,,,,,,,,,,,,,,,,
Stew_downgraded,Do [sword]1 damage,1,attack(1);,Random Roll,COUNTDOWN,3,PURPLE,,,,_damage,,,,,,,,,,,,,,,,
Laser,Do [sword]4 damage,1,attack(4); sfx(~_plasma~);,Plasma Gun,COUNTDOWN,4,RED,change_power,change_power,,_damage,,,,,,,,,,,,,,,,
Laser_upgraded,Do [sword]5 damage,1,attack(5); sfx(~_plasma~);,Plasma Gun,COUNTDOWN,4,RED,,,,_damage,,,,,,,,,,,,,,,,
Laser_downgraded,Do [sword]2 damage,1,attack(2); sfx(~_plasma~);,Plasma Gun,COUNTDOWN,4,RED,,,,_damage,,,,,,,,,,,,,,,,
Feather Arrow,Inflict [weaken][;]then do 1 Dmg|<d6> amount of times,1,inflict(WEAKEN); for (i in 0...d) {attack(1);}; sfx(~_weaken~);,Burrower,REQUIRE1|FREE1,,ORANGE,change_power,change_power,,,,,,,,,,,,,,,,,,
Feather Arrow_upgraded,Inflict [weaken][;]then do 1 Dmg|<d6> amount of times,1, inflict(WEAKEN); for (i in 0...d) {attack(1);}; sfx(~_weaken~);,Burrower,MAX2|FREE1,,ORANGE,,,,,,,,,,,,,,,,,,,,
Feather Arrow_downgraded,Inflict [weaken][;]then do 1 Dmg|<d6> amount of times,1,inflict(WEAKEN); for (i in 0...d) {attack(1);}; sfx(~_weaken~);,Burrower,REQUIRE1,,ORANGE,,,,,,,,,,,,,,,,,,,,
Rainbow Crystal,[red]Cast [orange]a [yellow]lot [green]of [blue]statuses [purple]to|[gray]you [red]and [orange]the [yellow]foe[green][;] <d6> [blue]dmg.|[gray](You receive good statuses),2,sfx(~_vanish~); sfx(~_magic~); inflict(rand([FIRE|SHOCK|ICE|WEAKEN|POISON|BLIND|CONFUSE|LOCK|SILENCE|CURSE])); inflictself(rand([SHIELD|REDUCE|THORNS|REEQUIPNEXT|SURVIVE|FURY|DODGE|PIERCE])); attack(d);,Magic Dice,MAX4,,PINK,change_power,change_power,,,,,,,,,,,,,,,,,,
Rainbow Crystal_downgraded,[red]Cast [orange]a [yellow]lot [green]of [blue]statuses [purple]to|[gray]you [red]and [orange]the [yellow]foe[green][;] <d6> [blue]dmg,2,sfx(~_vanish~) ;sfx(~_magic~); inflict(rand([FIRE|SHOCK|ICE|WEAKEN|POISON|BLIND|CONFUSE|LOCK|SILENCE|CURSE])); inflictself(rand([FIRE|SHOCK|ICE|WEAKEN|POISON|BLIND|CONFUSE|LOCK|SILENCE|CURSE])); attack(d);,Magic Dice,MAX4,,PINK,,,,,,,,,,,,,,,,,,,,
Rainbow Crystal_upgraded,[red]Cast [orange]a [yellow]lot [green]of [blue]statuses [purple]to|[gray]you [red]and [orange]the [yellow]foe[green][;] <d6> [blue]dmg.|[gray](start of turn: [red]?[yellow]?[blue]? [gray]status),2,sfx(~_vanish~); sfx(~_magic~); inflict(rand([FIRE|SHOCK|ICE|WEAKEN|POISON|BLIND|CONFUSE|LOCK|SILENCE|CURSE])); inflictself(rand([SHIELD|REDUCE|THORNS|REEQUIPNEXT|SURVIVE|FURY|DODGE|PIERCE])); attack(d);,Magic Dice,MAX4,,PINK,,,,,,,,,,,,,,,,,,,,
Creep,In [jinx]2 turns[;] deal [sword]4 dmg|and add a status|,1,jinx(~Creep~|~[sword]4 damage[;] gain a status~|~[sword]4 damage[;] gain a status~|~inflict(rand([CURSE| LOCK| FIRE| ICE| WEAKEN| SHOCK| POISON])); sfx(\~_curse\~|\~\~|0.2); attack(%VAR%); sfxdamage(null|%VAR%);~|target|self|2|4); sfx(~_thinghappens~);,Magic Dice,COUNTDOWN,5,PINK,change_power,change_power,2,,,,,,,,,,,,,,,,,
Creep_downgraded,In [jinx]4 turns[;] deal [sword]4 dmg|and add a status|,1,jinx(~Creep-~|~[sword]4 damage[;] gain a status~|~[sword]4 damage[;] gain a status~|~inflict(rand([CURSE| LOCK| FIRE| ICE| WEAKEN| SHOCK| POISON])); sfx(\~_curse\~|\~\~|0.2); attack(%VAR%); sfxdamage(null|%VAR%);~|target|self|4|4); sfx(~_thinghappens~);,Magic Dice,COUNTDOWN,5,PINK,,,2,,,,,,,,,,,,,,,,,
Creep_upgraded,In [jinx]2 turns[;] deal [sword]6 dmg|and add a status|,1,jinx(~Creep+~|~[sword]6 damage[;] gain a status~|~[sword]6 damage[;] gain a status~|~inflict(rand([CURSE| LOCK| FIRE| ICE| WEAKEN| SHOCK| POISON])); sfx(\~_curse\~|\~\~|0.2); attack(%VAR%); sfxdamage(null|%VAR%);~|target|self|2|6); sfx(~_thinghappens~);,Magic Dice,COUNTDOWN,5,PINK,,,2,,,,,,,,,,,,,,,,,
Dense Fog,Do [sword]2[;] blind [blind]1 die|gain a dice|[gray](once per battle),1,attack(2); givedice(rand([1|2|3|4|5|6])); inflict(BLIND); sfx(~_blind~); sfxdamage(null|3);,Shuriken,COUNTDOWN,5,GRAY,change_power,change_power,,,,,YES,,,,,,,,,,,,,
Dense Fog_upgraded,Do [sword]4[;] blind [blind]1 die|gain a dice|[gray](once per battle),1,attack(4); givedice(rand([1|2|3|4|5|6])); inflict(BLIND); sfx(~_blind~); sfxdamage(null|4);,Shuriken,COUNTDOWN,5,GRAY,,,,,,,YES,,,,,,,,,,,,,
Dense Fog_downgraded,Do [sword]2[;] blind [blind]1 dice|[gray](once per battle),1,attack(2); inflict(BLIND); sfx(~_blind~); sfxdamage(null|3); removeequipment(e);,Shuriken,COUNTDOWN,5,GRAY,,,,,,,YES,,,,,,,,,,,,,
Forecast,Gain a low [dice][;] In [jinx]2 turns|Inflict [curse]1 Curse and [sword]3|[gray](once per battle),1, givedice(rand([1|2|3])); jinx(~Forecast~|~[sword]3 damage[;] gain [curse]curse~|~[sword]3 damage[;] gain [curse]curse~|~inflict(CURSE); sfx(\~_curse\~|\~\~|0.2); attack(3); sfxdamage(null|3);~|target|self|2|3); sfx(~_thinghappens~);,Random Roll,COUNTDOWN,5,PINK,change_power,change_power,,,,,YES,,,,,,,,,,,,,
Forecast_upgraded,Gain a low [dice][;] In [jinx]2 turns|Inflict [curse]1 Curse and [sword]5|[gray](once per battle),1, givedice(rand([1|2|3|4|5|6])); jinx(~Forecast~|~[sword]5 damage[;] gain [curse]curse~|~[sword]5 damage[;] gain [curse]curse~|~inflict(CURSE); sfx(\~_curse\~|\~\~|0.2); attack(5); sfxdamage(null|5);~|target|self|2|5); sfx(~_thinghappens~);,Random Roll,COUNTDOWN,5,PINK,,,,,,,YES,,,,,,,,,,,,,
Forecast_downgraded,In [jinx]2 turns[;] do [sword] 3|[gray](once per battle),1, jinx(~Forecast~|~[sword]3 damage~|~[sword]3 damage~|~sfx(\~_curse\~|\~\~|0.2); attack(3); sfxdamage(null|3);~|target|self|2|3); sfx(~_thinghappens~); removeequipment(e);,Random Roll,COUNTDOWN,5,PINK,,,,,,,YES,,,,,,,,,,,,,
Acid Rain,Do [poison]3 dmg[;] inflict [poison]1|gain a low dice|[gray](once per battle),1,attack(3|POISON); givedice(rand([1|2|3])); inflict(POISON); sfx(~_poison~); sfxdamage(null|3);,Shuriken,COUNTDOWN,5,PURPLE,change_power,change_power,,,,,YES,,,,,,,,,,,,,
Acid Rain_upgraded,Do [poison]4 dmg[;] inflict [poison]1|gain a dice|[gray](once per battle),1,attack(5|POISON); givedice(rand([1|2|3|4|5|6])); inflict(POISON); sfx(~_poison~); sfxdamage(null|4);,Shuriken,COUNTDOWN,5,PURPLE,,,,,,,YES,,,,,,,,,,,,,
Acid Rain_downgraded,Do [poison]3 dmg|[gray](once per battle),1,attack(3|POISON); sfx(~_poison~); sfxdamage(null|3); removeequipment(e);,Shuriken,COUNTDOWN,5,PURPLE,,,,,,,YES,,,,,,,,,,,,,
Sandstorm,Do [weaken]3 dmg[;] inflict [weaken]1|gain a low dice|[gray](once per battle),1,attack(3|WEAKEN); givedice(rand([1|2|3])); inflict(WEAKEN); sfx(~_weaken~); sfxdamage(null|3);,Burrower,COUNTDOWN,5,ORANGE,change_power,change_power,,,,,YES,,,,,,,,,,,,,
Sandstorm_upgraded,Do [weaken]4 dmg[;] inflict [weaken]1|gain a dice|[gray](once per battle),1,attack(5|WEAKEN); givedice(rand([1|2|3|4|5|6])); inflict(WEAKEN); sfx(~_weaken~); sfxdamage(null|4);,Burrower,COUNTDOWN,5,ORANGE,,,,,,,YES,,,,,,,,,,,,,
Sandstorm_downgraded,Do [weaken]3 dmg|[gray](once per battle),1,attack(3|WEAKEN); sfx(~_weaken~); sfxdamage(null|3); removeequipment(e);,Burrower,COUNTDOWN,5,ORANGE,,,,,,,YES,,,,,,,,,,,,,
Pollution,Take [sword]2 dmg[;] but inflict [vanish][;]|[curse][;][blind] and [poison][;] gain a low dice|[gray](once per battle),1,attackself(2|POISON); givedice(rand([1|2|3])); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); }; inflict(CURSE); inflict(BLIND); inflict(POISON); sfx(~_vanish~); sfx(~_curse~); sfx(~_blind~); sfx(~_poison~);,Stardust,COUNTDOWN,5,BLACK,change_power,change_power,,,,,YES,,,,,,,,,,,,,
Pollution_upgraded,Heal for [sword]1[;] inflict [vanish][;]|[curse][;][blind] and [poison][;] gain a dice|[gray](once per battle),1,attackself(-3); givedice(rand([1|2|3|4|5|6])); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); }; inflict(CURSE); inflict(BLIND); inflict(POISON); sfx(~_vanish~); sfx(~_curse~); sfx(~_blind~); sfx(~_poison~); sfx(~_heal~);,Stardust,COUNTDOWN,5,BLACK,,,,,,,YES,,,,,,,,,,,,,
Pollution_downgraded,Take [sword]3 dmg[;]|and inflict [vanish][;][curse][;][blind] and [poison]|[gray](once per battle),1,attackself(4|POISON); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); }; inflict(CURSE); inflict(BLIND); inflict(POISON); sfx(~_vanish~); sfx(~_curse~); sfx(~_blind~); sfx(~_poison~); removeequipment(e);,Stardust,COUNTDOWN,5,BLACK,,,,,,,YES,,,,,,,,,,,,,
Gemini Geometry,If Odd[;] duplicate dice.|If Even[;] dice value x2.,1,if(d%2 == 0){ givedice(d*2); } else { givedice([d|d]);}; sfx(~useitem~);,Magic Dice,MAX5,,GREEN,change_power,change_power,,,,YES,,,,,,,,,,,,,,
Gemini Geometry_downgraded,If Odd[;] dice decreases by 1.|If Even[;] reroll dice.,1,if(d%2 == 0){ givedice(); } else { givedice(d-1);}; sfx(~useitem~);,Magic Dice,MIN5,,GREEN,,,,,,YES,,,,,,,,,,,,,,
Gemini Geometry_upgraded,2 or 3: Square the dice|4 or 5: Dice (<d6>x2) + 1,1,if(d == 2){ givedice(4); } if(d == 3){ givedice(6); givedice(3); } if(d == 4){givedice(9);} if(d == 5){givedice(11);} sfx(~useitem~);,Magic Dice,RANGE25,,GREEN,,,,,,YES,,,,,,,,,,,,,,
Rewind Tape,Gain an [confuse]Extra [yellow]Turn|[gray](Once per battle),2,inflictself(~extraturn~); sfx(~_dodge~); sfx(~_thinghappens~); ,Dramatic Pause,COUNTDOWN,30,ORANGE,change_power,change_power,,,,YES,YES,,,,,,,,,,,,,
Rewind Tape_upgraded,Gain an [confuse]Extra [yellow]Turn|[gray](Once per battle),2,inflictself(~extraturn~); sfx(~_dodge~); sfx(~thinghappens~);,Dramatic Pause,COUNTDOWN,20,ORANGE,,,,,,YES,YES,,,,,,,,,,,,,
Rewind Tape_downgraded,Do Nothing,2,sfx(~_dodge~); sfx(~thinghappens~);,Dramatic Pause,COUNTDOWN,1,ORANGE,,,,,,YES,YES,,,,,,,,,,,,,
Hammer@enemy,Do [shock]<d6> damage[;]|on 6[;] inflict [shock]1 shock,2,attack(d | SHOCK); if(d == 6) inflict(SHOCK); if(d < 6) { sfxdamage(target|d); } else { sfxdamage(target|d); sfx(~_shock~|~~|0.2); },Jackhammer,NORMAL,,YELLOW,reducesize,change_power,,,,,,excludefromrandomlists,,,,,,,,,,,,
Hammer@enemy_downgraded,Do [shock]<d6> damage,2,attack(d | SHOCK);,Jackhammer,NORMAL,,YELLOW,,,,,,,,excludefromrandomlists,,,,,,,,,,,,
Hammer@enemy_weakened,Do [shock]<d6> damage,1,attack(d | SHOCK);,Jackhammer,NORMAL,,YELLOW,,,,,,,,excludefromrandomlists,,,,,,,,,,,,
Hammer@enemy_deckupgrade,Do [shock]<d6> damage|[shock]Shocks the enemy,2,attack(d| SHOCK); inflict(SHOCK);,Jackhammer,NORMAL,,YELLOW,,,,,,,,excludefromrandomlists,,,,,,,,,,,,
Shovel@enemy,Do [weaken]<d6> damage[;]|on 6[;] inflict [weaken]1 weaken,2,attack(d | WEAKEN); if(d == 6) inflict(WEAKEN); if(d < 6) { sfxdamage(target|d); } else { sfxdamage(target|d); sfx(~_weaken~|~~|0.2); },Burrower,NORMAL,,ORANGE,change_power,change_power,weaken,,,,,excludefromrandomlists,,,,,,,,,,,,
Shovel@enemy_upgraded,Do [weaken]<d6> damage[;]|on even[;] inflict [weaken]1 weaken,2,attack(d | WEAKEN); if(d % 2 == 0) inflict(WEAKEN); if(d % 2 == 1) { sfxdamage(target|d); } else { sfxdamage(target|d); sfx(~_weaken~|~~|0.2); },Burrower,NORMAL,,ORANGE,,,,,,,,excludefromrandomlists,,,,,,,,,,,,
Shovel@enemy_downgraded,Do [weaken]<d6> damage,2,attack(d | WEAKEN);,Burrower,NORMAL,,ORANGE,,,,,,,,excludefromrandomlists,,,,,,,,,,,,
Cauldron@enemy,Do [sword]1 damage[;]|get a new dice,1,attack(1); givedice();,Random Roll,NORMAL,,PURPLE,change_power,change_power,,,,,,excludefromrandomlists,1,,,,,,,,,,,givedice();
Cauldron@enemy_upgraded,Do [sword]1 damage[;] reroll dice|[gray](Reuseable),1,attack(1); givedice();,Random Roll,NORMAL,,PURPLE,,,,,2,,,excludefromrandomlists,,,,,,,,,,,,givedice();
Cauldron@enemy_downgraded,Do [sword]1 damage,1,attack(1);,Random Roll,NORMAL,,PURPLE,,,,,,,,excludefromrandomlists,,,,,,,,,,,,
Blood Suck@enemy,Drain [heart]<d6> health,2,drain(d);,Blood Sip,MAX4,,RED,simplify,decreaserange,,,,,,excludefromrandomlists,,,,,,,,,,,,
Lament@enemy,Do [sword]<d6> damage[;]|on 6[;] inflict [ice]1 freeze,2,attack(d); if(d == 6) { inflict(ICE| 1); sfx(~_ice~|~~|0.2); } sfxdamage(target|d);,Arctic Storm,NORMAL,,BRIGHTCYAN,change_power,change_power,,,,,,excludefromrandomlists,,,,,,,,,,,,
Lament@enemy_upgraded,Do [sword]<d6> damage[;]|on 6[;] inflict [ice]1 freeze,2,attack(d); if(d == 7) { inflict(ICE| 1); sfx(~_ice~|~~|0.2); } sfxdamage(target|d);,Arctic Storm,NORMAL|FREE1,,BRIGHTCYAN,,,,,,,,excludefromrandomlists,,,,,,,,,,,,
Lament@enemy_downgraded,Do [sword]<d6> damage,2,attack(d);,Arctic Storm,NORMAL,,BRIGHTCYAN,,,,,,,,excludefromrandomlists,,,,,,,,,,,,
Hall of Mirrors@enemy,[]+1 dice this fight,1,if(simulation) { bonus(1000); } else{ self.extradice++; },Focus,REQUIRE6,,PURPLE,simplify,doublerequirements,,,,YES,,excludefromrandomlists,1,,,,,,,,,,,
Crash,Do [ice]2 damage|+ [ice]1 damage per [ice]Freeze.,2,attack(getstatus(ICE) + 2| ICE); sfx(~_ice~);,,MAX4,,BRIGHTCYAN,change_power,change_power,,_ice,,,,,,,,,,,,,,,,
Crash_upgraded,Do [ice]2 damage|+ [ice]1 damage per [ice]Freeze.|Return the dice.,2,attack(getstatus(ICE) + 2| ICE); givedice(d); sfx(~_ice~);,,MAX4,,BRIGHTCYAN,,,,_ice,,,,,,,,,,,,,,,,
Crash_downgraded,Do [ice]2 damage|+ [ice]1 damage per [ice]Freeze.,2,attack(getstatus(ICE) + 2| ICE); sfx(~_ice~);,,MAX2,,BRIGHTCYAN,,,,_ice,,,,,,,,,,,,,,,,
Boo,Do [sword]2 damage[;]|inflict [haunted]Haunt,2,attack(2); inflict(~haunted~); sfx(~_damage~);,,NORMAL,,PINK,change_power,change_power,,,,,,,,,,,,,,,,,,
Boo_upgraded,Do [sword]3 damage[;]|inflict [haunted]Haunt,2,attack(3); inflict(~haunted~); sfx(~_damage~);,,NORMAL,,PINK,,,,,,,,,,,,,,,,,,,,
Boo_downgraded,Do [sword]1 damage[;]|inflict [haunted]Haunt,2,attack(1); inflict(~haunted~); sfx(~_damage~);,,NORMAL,,PINK,,,,,,,,,,,,,,,,,,,,
Trick,Do [sword]3 damage[;]|snap 3 at once to inflict|[recycle]Swap [green]Next [green]Target,2,attack(3); sfx(~_damage~);,,MAX4,,ORANGE,change_power,change_power,,,,,,,,,,,,,,,,if(snap >= 3) inflict(~reversenexttarget~);,,
Trick_upgraded,Do [sword]4 damage[;]|snap 3 at once to inflict|[recycle]Swap [green]Next [green]Target,2,attack(4); sfx(~_damage~);,,MAX4,,ORANGE,,,,,,,,,,,,,,,,,,if(snap >= 3) inflict(~reversenexttarget~);,,
Trick_downgraded,Do [sword]2 damage[;]|snap 3 at once to inflict|[recycle]Swap [green]Next [green]Target,2,attack(2); sfx(~_damage~);,,MAX4,,ORANGE,,,,,,,,,,,,,,,,,,if(snap >= 3) inflict(~reversenexttarget~);,,
Treat,Heal [heal]2. If above max hp[;]|gain [fury]Spooky [red]Fury[]|up to twice per turn.,2,if(self.maxhp - self.hp < 2 && e.getvar(~treat~) < 2) { e.setvar(~treat~ | e.getvar(~treat~) + 1); inflictself(~spookyfury~); } attackself(-2); sfx(~_heal~);,,NORMAL,,GREEN,change_power,change_power,,,,YES,,,,,,,e.setvar(~treat~ | 0);,,,,,if(getstatusself(~spookyfury~) > 2){ removestatusself(~spookyfury~ | getstatusself(~spookyfury~) - 2); },e.preventdefault = true; e.maintainfury = true;,
Treat_upgraded,Heal [heal]3. If above max hp[;]|gain [fury]Spooky [red]Fury[]|up to twice per turn.,2,if(self.maxhp - self.hp < 3 && e.getvar(~treat~) < 2) { e.setvar(~treat~ | e.getvar(~treat~) + 1); inflictself(~spookyfury~); } attackself(-3); sfx(~_heal~);,,NORMAL,,GREEN,,,,,,YES,,,,,,,e.setvar(~treat~ | 0);,,,,,if(getstatusself(~spookyfury~) > 2){ removestatusself(~spookyfury~ | getstatusself(~spookyfury~) - 2); },e.preventdefault = true; e.maintainfury = true;,
Treat_downgraded,Heal [heal]2. If above max hp[;]|gain [fury]Spooky [red]Fury[]|up to once per turn.,2,if(self.maxhp - self.hp < 2 && e.getvar(~treat~) < 1) { e.setvar(~treat~ | e.getvar(~treat~) + 2); inflictself(~spookyfury~); } attackself(-2); sfx(~_heal~);,,NORMAL,,GREEN,,,,,,YES,,,,,,,e.setvar(~treat~ | 0);,,,,,if(getstatusself(~spookyfury~) > 1){ removestatusself(~spookyfury~ | getstatusself(~spookyfury~) - 1); },e.preventdefault = true; e.maintainfury = true;,
2 Spooky 4 U,Hex the enemy[;] worsening Haunt|[gray](once per battle),2,inflict(possess);,,MAX2|MIN4|RANGE24,,PURPLE,change_power,change_power,,_curse,,,YES,finale,,,,,,,,,,,,
2 Spooky 4 U_upgraded,Hex the enemy[;] worsening Haunt|[gray](once per battle),2,inflict(possess);,,MAX2|MIN4,,PURPLE,,,,_curse,,,YES,finale,,,,,,,,,,,,
2 Spooky 4 U_downgraded,Hex the enemy[;] worsening Haunt|[gray](once per battle),2,inflict(possess);,,MAX2|RANGE24|RANGE24|MIN4,,PURPLE,,,,_curse,,,YES,finale,,,,,,,,,,,,
Spooky Deck,4 Boos[;] 3 Tricks|and 2 Treats|Finale Card: 2 Spooky 4 U,1,,,,,PURPLE,,,,,,,,excludefromrandomlists,,,,,addjestercard(~boo~); addjestercard(~boo~); addjestercard(~boo~); addjestercard(~boo~); addjestercard(~trick~); addjestercard(~trick~); addjestercard(~trick~); addjestercard(~treat~); addjestercard(~treat~); addjestercard(~2 spooky 4 u~); sfx(~jester_delete~); Deck.getcard(0).delete();,,,,,,,
Jack o' Lantern,Inflict [haunted]Haunt[;] [fire]Burn|and gain 2x<slotdoubles> next turn.|Hey[;] that rhymed!,2,inflict(~haunted~); inflict(FIRE); inflictself(~stash~ + d); inflictself(~stash~ + d); inflictself(~lantern~); sfx(~_curse~);,,DOUBLES|DOUBLES,,PURPLE,change_power,change_power,,_curse,,,,,,,,,,,,,,,,
Jack o' Lantern_upgraded,Inflict 2 [haunted]Haunt[;] 2 [fire]Burn|and gain 2x<slotdoubles> next turn.|Hey[;] that rhymed!,2,inflict(~haunted~ | 2); inflict(FIRE | 2); inflictself(~stash~ + d); inflictself(~stash~ + d); inflictself(~lantern~); sfx(~_curse~);,,DOUBLES|DOUBLES,,PURPLE,,,,_curse,,,,,,,,,,,,,,,,
Jack o' Lantern_downgraded,Gain 2x<slotdoubles> next turn.|Nothing to rhyme with...,2,inflictself(~stash~ + d); inflictself(~stash~ + d); inflictself(~lantern~); sfx(~_curse~);,,DOUBLES|DOUBLES,,PURPLE,,,,_curse,,,,,,,,,,,,,,,,
Boolin Key,Set two random dice|to <d6>[;] inflict [haunted]Haunt,2,var dicelist = []; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue != d){ dicelist.push(mydice); } } if(dicelist.length > 0) { shuffle(dicelist); dicelist[0].animatereroll(d| self.screenposition()); } if(dicelist.length > 1) { dicelist[1].animatereroll(d| self.screenposition()); } inflict(~haunted~); sfx(~_curse~);,,NORMAL,,PURPLE,change_power,change_power,,_curse,,YES,,,,,,,,,,,,,,
Boolin Key_upgraded,Set three random dice|to <d6>[;] inflict [haunted]Haunt 2,2,var dicelist = []; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue != d){ dicelist.push(mydice); } } if(dicelist.length > 0) { shuffle(dicelist); dicelist[0].animatereroll(d| self.screenposition()); } if(dicelist.length > 1) { dicelist[1].animatereroll(d| self.screenposition()); } if(dicelist.length > 2) { dicelist[2].animatereroll(d| self.screenposition()); } inflict(~haunted~ | 2); sfx(~_curse~);,,NORMAL,,PURPLE,,,,_curse,,YES,,,,,,,,,,,,,,
Boolin Key_downgraded,Set two random dice to <d6>,2,var dicelist = []; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue != d){ dicelist.push(mydice); } } if(dicelist.length > 0) { shuffle(dicelist); dicelist[0].animatereroll(d| self.screenposition()); } if(dicelist.length > 1) { dicelist[1].animatereroll(d| self.screenposition()); sfx(~_curse~);,,NORMAL,,PURPLE,,,,_curse,,YES,,,,,,,,,,,,,,
Sword...?,Deal [sword]<d6> damage...?,2,attack(d); sfx(~_damage~);,,NORMAL,,RED,add1,complicate,,,,,,,,,,,,,,,sfx(~_defect~);,,,
Six Shooter...?,Deal [sword]<d6> damage...?|,2,attack(d); sfx(~_damage~);,,REQUIRE6,,RED,add1,complicate,,,3,,,,,,,,,,,,sfx(~_defectgun~);,,,
Hitodama,Deal [sword]<d6> damage.|On 4[;] inflict [vanish]Vanish.,1,attack(d); if(d == 4) { inflict(~ncr_vanish~); } sfx(~_vanish~);,,MAX4,,PINK,simplify,change_power,,_vanish,,,,,,,,,,,,,,,,
Hitodama_downgraded,Deal [sword]<d6> damage.|On 2[;] inflict [vanish]Vanish.,1,attack(d); if(d == 2) { inflict(~ncr_vanish~); } sfx(~_vanish~);,,MAX2,,PINK,,,,_vanish,,,,,,,,,,,,,,,,
Hitodama_weakened,Deal [sword]<d6> damage.|On 2[;] inflict [vanish]Vanish.,1,attack(d); if(d == 2) { inflict(~ncr_vanish~); } sfx(~_vanish~);,,MAX4,,PINK,,,,_vanish,,,,,,,,,,,,,,,,
Spectral Strike,Deal [sword]<d6> damage.|On 6[;] inflict [haunted]Haunted 2.,2,attack(d); if(d == 6) { inflict(~haunted~ | 2); } sfx(~_curse~);,,NORMAL,,PURPLE,add1,complicate,,_curse,,,,,,,,,,,,,,,,
Banish,Deal [sword]<d6> damage.|On 6[;] inflict [vanish]Vanish.,2,attack(d); if(d == 6) { inflict(~ncr_vanish~); } sfx(~_vanish~);,,NORMAL,,PINK,add1,complicate,,_vanish,,,,,,,,,,,,,,,,
Soul Fade,Inflict [vanish]Vanish equal to|enemy [haunted]Haunt + [curse]Curse,2,inflict(~ncr_vanish~ | getstatus(~haunted~) + getstatus(CURSE)); sfx(~_vanish~);,,COUNTDOWN,8,PURPLE,change_power,donothing,,_vanish,,,,,,,,,,,,,,,,
Soul Fade_upgraded,Inflict [curse]Curse equal to|enemy [haunted]Haunt + [vanish]Vanish,2,inflict(CURSE | getstatus(~haunted~) + getstatus(~ncr_vanish~)); sfx(~_curse~);,,COUNTDOWN,8,PURPLE,,,,_curse,,,,,,,,,,,,,,,,
Blurse,Inflict [curse]Curse but give|enemy extra <d6> this turn,1,inflict(CURSE); inflict(~stash~ + d); sfx(~_curse~);,,NORMAL,,WHITE,change_power,complicate,,_curse,,,,,,,,,,,,,,,,
Blurse_upgraded,Inflict [curse]Curse 2 but give|enemy extra <d6> this turn,1,inflict(CURSE | 2); inflict(~stash~ + d); sfx(~_curse~);,,NORMAL,,WHITE,,,,_curse,,,,,,,,,,,,,,,,
Exorcise,Enemy loses all [curse]Curse[;]|[vanish]Vanish and [haunted]Haunt[;] and|takes 2 damage for each,2,attack(2 * (getstatus(CURSE) + getstatus(~haunted~) + getstatus(~ncr_vanish~))); removestatus(CURSE | ALL); removestatus(~haunted~ | ALL); removestatus(~ncr_vanish~ | ALL); sfx(~_cure~);,,COUNTDOWN,12,WHITE,halfcountdown,change_power,,_cure,,,,,,,,,,,,,,,,
Exorcise_downgraded,Enemy loses all [curse]Curse[;]|[vanish]Vanish and [haunted]Haunt[;] and|takes 1 damage for each,2,attack(getstatus(CURSE) + getstatus(~haunted~) + getstatus(~ncr_vanish~)); removestatus(CURSE | ALL); removestatus(~haunted~ | ALL); removestatus(~ncr_vanish~ | ALL); sfx(~_cure~);,,COUNTDOWN,12,WHITE,,,,_cure,,,,,,,,,,,,,,,,
Wispene Gas,Inflict [vanish]Vanish[;]|gain [fury]Spooky [red]Fury[]|and gain a <slotdoubles>,2,givedice(d); inflict(~ncr_vanish~); inflictself(~spookyfury~); sfx(~_vanish~);,,DOUBLES|DOUBLES,,RED,change_power,change_power,,_vanish,,,,,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Wispene Gas_upgraded,Inflict [vanish]Vanish[;]|gain [fury]Spooky [red]Fury[]|and return both dice,2,givedice(d); givedice(d); inflict(~ncr_vanish~); inflictself(~spookyfury~); sfx(~_vanish~);,,DOUBLES|DOUBLES,,RED,,,,_vanish,,,,,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Wispene Gas_downgraded,Inflict [vanish]Vanish|and gain [fury]Spooky [red]Fury,2,inflict(~ncr_vanish~); inflictself(~spookyfury~); sfx(~_vanish~);,,DOUBLES|DOUBLES,,RED,,,,_vanish,,,,,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Pester,Deal [sword]3 damage|On [fury]Fury[;] inflict [haunted]Haunt|(maintains [fury]Fury[]),2,attack(3);,,COUNTDOWN,4,RED,change_power,change_power,,_damage,,,,,,,,,e.setvar(~fury~ | 0);,,,,,,if(getstatusself(~fury~) + getstatusself(~spookyfury~) > 0){ e.setvar(~fury~ | 1); } e.maintainfury = true; if(e.getvar(~fury~) == 1){ inflict(~haunted~); sfx(~_curse~); e.setvar(~fury~ | 0); },
Pester_upgraded,Deal [sword]4 damage|On [fury]Fury[;] inflict [haunted]Haunt|(maintains [fury]Fury[]),2,attack(4);,,COUNTDOWN,4,RED,,,,_damage,,,,,,,,,e.setvar(~fury~ | 0);,,,,,,if(getstatusself(~fury~) + getstatusself(~spookyfury~) > 0){ e.setvar(~fury~ | 1); } e.maintainfury = true; if(e.getvar(~fury~) == 1){ inflict(~haunted~); sfx(~_curse~); e.setvar(~fury~ | 0); },
Pester_downgraded,Deal [sword]2 damage|On [fury]Fury[;] inflict [haunted]Haunt|(maintains [fury]Fury[]),2,attack(2);,,COUNTDOWN,4,RED,,,,_damage,,,,,,,,,e.setvar(~fury~ | 0);,,,,,,if(getstatusself(~fury~) + getstatusself(~spookyfury~) > 0){ e.setvar(~fury~ | 1); } e.maintainfury = true; if(e.getvar(~fury~) == 1){ inflict(~haunted~); sfx(~_curse~); e.setvar(~fury~ | 0); },
Spook,Inflict [haunted]Haunt[;]|return both dice,2,inflict(~haunted~); givedice(d); givedice(d); sfx(~_curse~);,,DOUBLES|DOUBLES,,PURPLE,change_power,change_power,,_curse,,,,,,,,,,,,,,,,
Spook_upgraded,Inflict [haunted]Haunt[;]|return the die,2,inflict(~haunted~); givedice(d); sfx(~_curse~);,,EVEN,,PURPLE,,,,_curse,,,,,,,,,,,,,,,,
Spook_downgraded,Inflict [haunted]Haunt[;]|gain a <slotdoubles>,2,inflict(~haunted~); givedice(d); sfx(~_curse~);,,DOUBLES|DOUBLES,,PURPLE,,,,_curse,,,,,,,,,,,,,,,,
Poof,Inflict [vanish]Vanish,1,inflict(~ncr_vanish~); sfx(~_vanish~);,,EVEN,,PINK,change_power,complicate,,_vanish,,,,,,,,,,,,,,,,
Poof_upgraded,Inflict 2 [vanish]Vanish,1,inflict(~ncr_vanish~ | 2); sfx(~_vanish~);,,EVEN,,PINK,,,,_vanish,,,,,,,,,,,,,,,,
Attacktoplasm,Deal [sword]<d6> damage.|On 4[;] inflict [haunted]Haunt.,1,attack(d); if(d == 4) { inflict(~haunted~); } sfx(~_curse~);,,MAX4,,PURPLE,simplify,change_power,,_curse,,,,,,,,,,,,,,,,
Attacktoplasm_downgraded,Deal [sword]<d6> damage.|On 2[;] inflict [haunted]Haunt.,1,attack(d); if(d == 2) { inflict(~haunted~); } sfx(~_curse~);,,MAX2,,PURPLE,,,,_curse,,,,,,,,,,,,,,,,
Attacktoplasm_weakened,Deal [sword]<d6> damage.|On 2[;] inflict [haunted]Haunt.,1,attack(d); if(d == 2) { inflict(~haunted~); } sfx(~_curse~);,,MAX4,,PURPLE,,,,_curse,,,,,,,,,,,,,,,,
Chocolate Spookie,Gain [fury]Spooky [red]Fury[],2,inflictself(~spookyfury~); sfx(~_heal~);,,COUNTDOWN,8,ORANGE,halfcountdown,donothing,,_heal,,,,,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Spooplicate,Duplicate a dice|Inflict a spooky status,2,inflict(rand([~haunted~|~haunted~|~haunted~|~haunted~|~haunted~|~haunted~|~ncr_vanish~|~ncr_vanish~|~ncr_vanish~|~curse~|~curse~|~reversenexttarget~])); givedice(d); givedice(d); sfx(~_curse~);,,MAX4,,GREEN,simplify,complicate,,_curse,,,,,,,,,,,,,,,,
Grudgenudge,3-6: Decrease value by 2|1-2: Inflict (3-<d6>) [haunted]Haunt,2,givedice(d - 2); inflict(~haunted~ | 3 - d); sfx(~_curse~);,,NORMAL,,PURPLE,change_power,change_power,,_curse,,,,,,,,,,,,,,,,
Grudgenudge_upgraded,4-6: Decrease value by 3|1-3: Inflict (4-<d6>) [haunted]Haunt,2,givedice(d - 3); inflict(~haunted~ | 4 - d); sfx(~_curse~);,,NORMAL,,PURPLE,,,,_curse,,,,,,,,,,,,,,,,
Grudgenudge_downgraded,3: Gain a 1|1-2: Inflict (3-<d6>) [haunted]Haunt,2,givedice(d - 2); inflict(~haunted~ | 3 - d); sfx(~_curse~);,,MAX3,,PURPLE,,,,_curse,,,,,,,,,,,,,,,,
Grudgenudge_weakened,Inflict (4-<d6>) [haunted]Haunt,2,inflict(~haunted~ | 4 - d); sfx(~_curse~);,,MAX3,,PURPLE,,,,_curse,,,,,,,,,,,,,,,,
Bump in the Night,1-4: Increase value by 2|5-6: Inflict (<d6>-4)|[haunted]Haunt[;] gain a 6,2,if(d > 4){ givedice(6); } else{ givedice(d + 2); } inflict(~haunted~ | d - 4); sfx(~_curse~);,,NORMAL,,PURPLE,change_power,change_power,,_curse,,,,,,,,,,,,,,,,
Bump in the Night_upgraded,1-3: Increase value by 3|4-6: Inflict (<d6>-3)|[haunted]Haunt[;] gain a 6,2,if(d > 3){ givedice(6); } else{ givedice(d + 3); } inflict(~haunted~ | d - 3); sfx(~_curse~);,,NORMAL,,PURPLE,,,,_curse,,,,,,,,,,,,,,,,
Bump in the Night_downgraded,Gain a 6[;]|on 5-6[;] inflict (<d6>-4)|[haunted]Haunt,2,if(d > 4){ givedice(6); } else{ givedice(d + 2); } inflict(~haunted~ | d - 4); sfx(~_curse~);,,MIN4,,PURPLE,,,,_curse,,,,,,,,,,,,,,,,
Bump in the Night_weakened,Inflict (<d6>-3)|[haunted]Haunt[;] gain a 6,2,if(d > 3){ givedice(6); } else{ givedice(d + 3); } inflict(~haunted~ | d - 3); sfx(~_curse~);,,MIN4,,PURPLE,,,,_curse,,,,,,,,,,,,,,,,
Shadow Ball,Deal [sword]<d6> damage.|On 4[;] inflict [curse]Curse.,1,attack(d); if(d == 4) { inflict(CURSE); } sfx(~_curse~);,,MAX4,,WHITE,simplify,change_power,,_curse,,,,,,,,,,,,,,,,
Shadow Ball_downgraded,Deal [sword]<d6> damage.|On 2[;] inflict [curse]Curse.,1,attack(d); if(d == 2) { inflict(CURSE); } sfx(~_curse~);,,MAX2,,WHITE,,,,_curse,,,,,,,,,,,,,,,,
Shadow Ball_weakened,Deal [sword]<d6> damage.|On 2[;] inflict [curse]Curse.,1,attack(d); if(d == 2) { inflict(CURSE); } sfx(~_curse~);,,MAX4,,WHITE,,,,_curse,,,,,,,,,,,,,,,,
Apparition,Inflict [haunted]Haunt[;] [curse]Curse and [vanish]Vanish,2,inflict(~haunted~); inflict(~ncr_vanish~); inflict(CURSE); sfx(~_curse~);,,COUNTDOWN,10,WHITE,change_power,change_power,,_curse,,,,,,,,,,,,,,,,
Apparition_upgraded,Inflict [haunted]Haunt[;] [curse]Curse and [vanish]Vanish[;],2,inflict(~haunted~); inflict(~ncr_vanish~); inflict(CURSE); sfx(~_curse~);,,COUNTDOWN,6,WHITE,,,,_curse,,,,,,,,,,,,,,,,
Apparition_downgraded,Inflict [haunted]Haunt[;] [curse]Curse or [vanish]Vanish,2,inflict(rand([~haunted~|~curse~|~ncr_vanish~])); sfx(~_curse~);,,COUNTDOWN,10,WHITE,,,,_curse,,,,,,,,,,,,,,,,
Bandage Whip,Do [sword]5 damage[;]|inflict [confuse]Confuse,2,attack(5); inflict(CONFUSE);,Stardust,COUNTDOWN,12,YELLOW,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Bandage Whip_upgraded,Do [sword]8 damage[;]|inflict [confuse]Confuse,2,attack(8); inflict(CONFUSE);,Stardust,COUNTDOWN,12,YELLOW,,,,,0,NO,NO,,,,,,,,,,,,,
Bandage Whip_downgraded,Inflict [confuse]Confuse,2,inflict(CONFUSE);,Stardust,COUNTDOWN,12,YELLOW,,,,,0,NO,NO,,,,,,,,,,,,,
Spooky Noises,Drain 1 health and|haunt [haunted]1 dice,1,drain(1); inflict(HAUNTED);,Night Terrors,ODD,,PURPLE,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Spooky Noises_upgraded,Drain 1 health and|haunt [haunted]2 dice,1,drain(1); inflict(HAUNTED|2);,Night Terrors,ODD,,PURPLE,,,,,0,NO,NO,,,,,,,,,,,,,
Spooky Noises_downgraded,Haunt [haunted]1 dice,1,inflict(HAUNTED);,Night Terrors,ODD,,PURPLE,,,,,0,NO,NO,,,,,,,,,,,,,
Fade,Do [sword]<d6> damage[;]|Inflict [vanish]Vanish,1,attack(d); inflict(VANISH);,,REQUIRE1,,PINK,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Fade_upgraded,Do [sword]<d6> damage[;]|Inflict [vanish]Vanish,1,attack(d); inflict(VANISH);,,REQUIRE1|FREE2,,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Fade_downgraded,Inflict [vanish]Vanish,1,inflict(VANISH);,,REQUIRE1,,PINK,,,,,0,NO,NO,,,,,,,,,,,,,
Jab,Do [sword]<d6> damage[;]|Gain [thorns]2 thorns,1,attack(d); inflictself(THORNS| 2);,,REQUIRE2,,GREEN,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Jab_upgraded,Do [sword]<d6> damage[;]|Gain [thorns]2 thorns,1,attack(d); inflictself(THORNS| 2);,,REQUIRE2|FREE2,,GREEN,,,,,0,NO,NO,,,,,,,,,,,,,
Jab_downgraded,Gain [thorns]2 thorns,1,inflictself(THORNS| 2);,,REQUIRE2,,GREEN,,,,,0,NO,NO,,,,,,,,,,,,,
Echo,Do [weaken]<d6> damage[;]|Inflict [weaken]3 weaken,1,attack(d|WEAKEN); inflict(WEAKEN| 3);,,REQUIRE3,,ORANGE,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Echo_upgraded,Do [weaken]<d6> damage[;]|Inflict [weaken]3 weaken,1,attack(d|WEAKEN); inflict(WEAKEN| 3);,,REQUIRE3|FREE2,,ORANGE,,,,,0,NO,NO,,,,,,,,,,,,,
Echo_downgraded,Inflict [weaken]3 weaken,1,inflict(WEAKEN| 3);,,REQUIRE3,,ORANGE,,,,,0,NO,NO,,,,,,,,,,,,,
Muddle,Do [sword]<d6> damage[;]|Inflict [confuse]Confuse,1,attack(d); inflict(CONFUSE);,,REQUIRE4,,YELLOW,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Muddle_upgraded,Do [sword]<d6> damage[;]|Inflict [confuse]Confuse,1,attack(d); inflict(CONFUSE);,,REQUIRE4|FREE2,,YELLOW,,,,,0,NO,NO,,,,,,,,,,,,,
Muddle_downgraded,Inflict [confuse]Confuse,1,inflict(CONFUSE);,,REQUIRE4,,YELLOW,,,,,0,NO,NO,,,,,,,,,,,,,
Mute,Do [sword]<d6> damage[;]|Inflict [silence]Silence,1,attack(d); inflict(SILENCE);,,REQUIRE5,,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Mute_upgraded,Do [sword]<d6> damage[;]|Inflict [silence]Silence,1,attack(d); inflict(SILENCE);,,REQUIRE5|FREE2,,BRIGHTCYAN,,,,,0,NO,NO,,,,,,,,,,,,,
Mute_downgraded,Inflict [silence]Silence,1,inflict(SILENCE);,,REQUIRE5,,BRIGHTCYAN,,,,,0,NO,NO,,,,,,,,,,,,,
Haunt,Do [sword]<d6> damage[;]|Haunt [haunted]3 dice,1,attack(d); inflict(HAUNTED|3);,,REQUIRE6,,PURPLE,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Haunt_upgraded,Do [sword]<d6> damage[;]|Haunt [haunted]3 dice,1,attack(d); inflict(HAUNTED|3);,,REQUIRE6|FREE2,,PURPLE,,,,,0,NO,NO,,,,,,,,,,,,,
Haunt_downgraded,Haunt [haunted]3 dice,1,inflict(HAUNTED|3);,,REQUIRE6,,PURPLE,,,,,0,NO,NO,,,,,,,,,,,,,
Poison Jab,Deal [sword]<d6> damage.|On 4[;] inflict [poison]Poison.,1,attack(d); if(d == 4) { inflict(POISON); } sfx(~_poison~);,,MAX4,,PURPLE,simplify,change_power,,_poison,,,,,,,,,,,,,,,,
Poison Jab_downgraded,Deal [sword]<d6> damage.|On 2[;] inflict [poison]Poison.,1,attack(d); if(d == 2) { inflict(POISON); } sfx(~_poison~);,,MAX2,,PURPLE,,,,_poison,,,,,,,,,,,,,,,,
Poison Jab_weakened,Deal [sword]<d6> damage.|On 2[;] inflict [poison]Poison.,1,attack(d); if(d == 2) { inflict(POISON); } sfx(~_poison~);,,MAX4,,PURPLE,,,,_poison,,,,,,,,,,,,,,,,
