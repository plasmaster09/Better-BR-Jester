Name,Description,Image,ImageOffset,Rule Change,Apply On Continue
Demon,Everyone starts each turn with [fury]Fury[;] but|it only works 50% of the time.,halloweenspecial_devil,-20|0,Rules.addplayerinnatestatus(~spookyfury~[;] 1[;] false); Rules.addenemyinnatestatus(~spookyfury~[;] 1[;] false); ,YES
Mummy,Enemies get 50% extra health[;]|but so do you.,halloweenspecial_muumy,5|-15,Rules.enemyhpadjust = 1.5; Rules.hpchangeonlevelup = 6; if (self.getvar(~mummy_applied~) != 1) {self.hp *= 1.5; self.maxhp *= 1.5; self.setvar(~mummy_applied~[;] 1);},YES
Pumpkin Spice,All status effects are doubled.,halloweenspecial_pumpkinspice,-25|-15,Rules.overload = true;,YES
Wolf Puppy ,The success odds of chance-based|effects are doubled for everyone.,wolfpuppy,0|0,Rules.addplayerinnatestatus(~luck~); Rules.addenemyinnatestatus(~luck~);,YES
Sorceress ,Everyone gains a random|status effect every turn.,sorceress,0|0,Rules.addextrascript(~if (target.hp > 0) {var statuslist = [FIRE[;] ICE[;] LOCK[;] SHOCK[;] WEAKEN[;] BLIND[;] CURSE[;] VANISH[;] FURY[;] DODGE[;] REDUCE]; var mystatus = rand(statuslist); inflictself(mystatus); inflict(mystatus); sfx(\~_\~ + mystatus.toLowerCase());}~[;] ~beforestartturn~);,YES
Drake ,Everyone survives one fatal blow.,vampire,-30|10,Rules.addplayerinnatestatus(SURVIVE[;] 1[;] true); Rules.addenemyinnatestatus(SURVIVE[;] 1[;] true);,YES
Scathach ,Everyone has only 1 dice|on the first turn.,scahatch,-60|-30,Rules.addextrascript(~if (turn == 1) {self.extradice = 1 - self.dice; self.setvar(\~mqscathachremix\~[;] self.extradice); target.extradice = 1 - target.dice; target.setvar(\~mqscathachremix\~[;] target.extradice);} else {self.extradice -= self.getvar(\~mqscathachremix\~); self.setvar(\~mqscathachremix\~[;] 0); target.extradice -= target.getvar(\~mqscathachremix\~); target.setvar(\~mqscathachremix\~[;] 0);}~[;] ~beforestartturn~);,YES
Loud Bird ,CAW! CAAAAAAW!,loudbird,0|-50,Rules.addextrascript(~if (chance(33)) {sfx(\~loudbirdscreech\~); screenshake();}~[;] ~beforestartturn~); Rules.addextrascript(~if (chance(25)) {sfx(\~loudbirdscreech\~); screenshake();}~[;] ~endturn~); Rules.addextrascript(~{sfx(\~loudbirdscreech\~); screenshake();}~[;] ~playerequipmentuse~); Rules.addextrascript(~if (rand([1|2]) == 1) {sfx(\~loudbirdscreech\~); screenshake();}~[;] ~enemyequipmentuse~);,YES
Buster ,Chance to do [fire]2 fire damage when|using any piece of equipment.,dragon,-130|-60,Rules.addextrascript(~if (chance(25)) {attack(2[;] FIRE); sfx(\~_fire\~);}~[;] ~playerequipmentuse~); Rules.addextrascript(~if (chance(25)) {attack(2[;] FIRE); sfx(\~_fire\~);}~[;] ~enemyequipmentuse~);,YES
Snowman ,Everyone is strong to ice damage|and weak to fire damage.,snowman,-10|-50,self.innate.push(~strongice~); self.innate.push(~weakfire~); Rules.addextrascript(~target.innate.push(\~strongice\~); target.innate.push(\~weakfire\~); new elements.Skill(\~mqelementalresistancefixboth\~).execute(self[;] target);~[;] ~startcombat~);,YES
Fireman ,Everyone is strong to fire damage|and weak to ice damage.,fireman,-20|-30,self.innate.push(~strongfire~); self.innate.push(~weakice~); Rules.addextrascript(~target.innate.push(\~strongfire\~); target.innate.push(\~weakice\~); new elements.Skill(\~mqelementalresistancefixboth\~).execute(self[;] target);~[;] ~startcombat~);,YES
Singer ,Everyone heals after using|10 pieces of equipment.,singer,-20|0,Rules.addplayerinnatestatus(~mqruleverse~[;] 1); Rules.addenemyinnatestatus(~mqruleverse~[;] 1);,YES
Vacuum ,Enemies lose 25% of their health[;]|but heal by [heal]2 on each attack.,vacuum,-100|50,Rules.enemyhpadjust *= 0.75;  Rules.addenemyinnatestatus(~mqvacuumrule~);,YES
Sticky Hands ,Lose [gold]4 gold.,stickyhands,-90|10,self.gold -= 4; if (self.gold < 0) self.gold = 0;,NO
Mimic ,A random piece of equipment is|unavailable every turn.,mimic,,Rules.addextrascript(~var myEquipment = []; if (self.equipment.length > 0) for (eq in self.equipment) if (eq.availablenextturn && eq.skillcard == \~\~) myEquipment.push(eq); if (myEquipment.length > 0) {var eq = rand(myEquipment); eq.availablenextturn = false; eq.unavailabledetails = [\~Disabled by:\~[;] \~Mimic rule\~];}~[;] ~startcombat~); Rules.addextrascript(~var myEquipment = []; var enemyEquipment = []; if (self.equipment.length > 0) for (eq in self.equipment) if (eq.availablenextturn && eq.skillcard == \~\~) myEquipment.push(eq); if (target.equipment.length > 0) for (eq in target.equipment) if (eq.availablenextturn && eq.skillcard == \~\~) enemyEquipment.push(eq); if (myEquipment.length > 0) {var eq = rand(myEquipment); eq.availablenextturn = false; eq.unavailabledetails = [\~Disabled by:\~[;] \~Mimic rule\~];} if (enemyEquipment.length > 0) {var eq = rand(enemyEquipment); eq.availablenextturn = false; eq.unavailabledetails = [\~Disabled by:\~[;] \~Mimic rule\~];}~[;] ~endturn~);,NO
Baby Squid ,All dice are [blind]Blinded|on the first turn.,squid,30|0,Rules.addplayerinnatestatus(~alternate_confuse~[;] 1[;] true); Rules.addplayerinnatestatus(~blind~[;] 1[;] true); Rules.addenemyinnatestatus(~alternate_confuse~[;] 1[;] true);,YES
Haunted Jar ,You gain [poison]1 poison every turn.,hauntedjar,0|0,Rules.playerpoisondelta = 1; Rules.addextrascript(~if (getstatusself(POISON) < 1) inflictself(POISON);~[;] ~beforestartturn~);,YES
Paper Knight ,[fire]Burn status is doubled|for everyone.,cardboardwarrior,-90|0,Rules.addextrascript(~if (getstatusself(FIRE) > 0) inflictself(FIRE[;] getstatusself(FIRE));~[;] ~beforestartturn~); Rules.addextrascript(~if (getstatusself(FIRE) > 0) inflictself(FIRE[;] getstatusself(FIRE));~[;] ~endturn~);,YES
Robobot ,You are more likely to roll|4s[;] 5s and 6s.,robobot,-70|-50,Rules.playerdicerange([1[;] 2[;] 3[;] 4[;] 4[;] 5[;] 5[;] 6[;] 6]);,YES
Banshee ,[haunted]Haunted dice reroll lower.|Everyone is always [haunted]Haunted.,banshee,-20|0,Rules.addplayerinnatestatus(~weirdhaunt~[;] 1); Rules.addplayerinnatestatus(~gainweirdhaunt~); Rules.addplayerinnatestatus(~possess~); Rules.addenemyinnatestatus(~possess~);,YES
Madison ,Lose [gold]12 gold. Gain [fury]Fury|for the next 12 turns.,girlscout,-10|-30,self.gold -= 12; if (self.gold < 0) self.gold = 0; if (self.getvar(~mqmadisonfury~) == 0) self.setvar(~mqmadisonfury~[;] 12); Rules.addextrascript(~if (self.getvar(\~mqmadisonfury\~) > 0) {inflictself(FURY); sfx(\~_fury\~[;] \~\~[;] 0.2);} self.setvar(\~mqmadisonfury\~[;] self.getvar(\~mqmadisonfury\~) - 1); if (self.getvar(\~mqmadisonfury\~) <= 0) self.setvar(\~mqmadisonfury\~[;] -99); if (self.getvar(\~mqmadisonfury\~) > 0) inflictself(\~mqmadisonfury\~[;] self.getvar(\~mqmadisonfury\~));~[;] ~onstartturn~);,YES
Skeleton ,25% chance to get [lock]1 Lock|at the start of each turn.,skeleton,-20|-80,Rules.addextrascript(~if (chance(25)) {inflictself(LOCK); sfx(\~_lock\~[;] \~\~[;] 0.2);}~[;] ~beforestartturn~); Rules.addextrascript(~if (chance(25)) {inflictself(LOCK); sfx(\~_lock\~[;] \~\~[;] 0.2);}~[;] ~endturn~);,YES
Cornelius ,Die after your 6th turn.,cornelius,0|-40,Rules.addextrascript(~if (turn > 6) pierceattackself(self.hp);~[;] ~onstartturn~);,YES
Cowboy ,Enemies are more likely to roll a 6.,cowboy,10|0,Rules.enemydicerange([1[;] 2[;] 3[;] 4[;] 5[;] 6[;] 6[;] 6[;] 6]);,YES
Handyman ,[shock]Shocked equipment costs health|instead of dice.,handyman,-30|-10,Rules.setalternate(~shock~);,YES
Wizard ,All enemies get Hall of Mirrors.,wizard,-50|-20,Rules.addextrascript(~if (target.spaceleft() >= 1) giveenemyequipment(\~Hall of Mirrors\~[;] false[;] false);~[;] ~startcombat~);,YES
Warlock ,The boss enemy gets a|blessing every turn.,warlock,-70|-50,Rules.addextrascript(~if (target.level >= 6) {if (target.getvar(\~mqwarlockremix_script_injected\~) != 1) {target.setvar(\~mqwarlockremix_script_injected\~[;] 1); target.scriptbeforestartturn += \~ var blessings = [SHIELD[;] REDUCE[;] DODGE]; if (getstatusself(FURY) <= 0) blessings.push(FURY); var randomstatus = rand(blessings); var a = 1; if (randomstatus == SHIELD) a = 4; if (randomstatus == REDUCE) a = 2; inflictself(randomstatus[;] a); sfx(\\\~_\\\~ + randomstatus.toLowerCase()[;] \\\~\\\~[;] 0.2);\~;}}~[;] ~beforestartturn~);,YES
Space Marine ,Enemy rolls add up to 10.,spacemarine,-30|-10,Rules.addextrascript(~var totaldice = (self.dice + self.extradice); var divvalue = 10 / totaldice; var newdice = []; for (i in 0...totaldice) newdice.push(divvalue); if ((totaldice % 2) != 0) newdice[0]++; if (totaldice <= 1) newdice = [6]; Rules.stackenemydice([newdice]);~[;] ~endturn~);,YES
Bounty Hunter ,Get [gold]1 extra gold if you defeat|the enemy in under 4 turns.,bountyhunter,-20|0,Rules.addextrascript(~if ((turn - 1) < 4) {self.gold++; sfx(\~stealgold\~); self.textparticle(\~[gold]+1!\~); screenshake();}~[;] ~aftercombat~);,YES
Rose ,[thorns]Thorns drains health on attack|instead of damaging when attacked.,rose,-20|-40,Rules.setalternate(THORNS);,YES
Cactus ,Everyone gets [thorns]1 thorn per [shield]3|shield at the end of their turn.,cactuswarrior,-20|0,Rules.addextrascript(~if (getstatus(SHIELD) > 0) inflict(THORNS[;] getstatus(SHIELD) / 3);~[;] ~endturn~); Rules.addextrascript(~if (getstatus(SHIELD) > 0) inflict(THORNS[;] getstatus(SHIELD) / 3);~[;] ~onstartturn~);,YES
Frog ,Small equipment becomes weakened|for everyone.,frog,-80|-40,Rules.addextrascript(~for (eq in self.equipment) if (eq.skillcard == \~\~) if (eq.size == 1) eq.animate(\~weaken\~);~[;] ~onstartturn~); Rules.addextrascript(~for (eq in self.equipment) if (eq.skillcard == \~\~) if (eq.size == 1) eq.animate(\~weaken\~);~[;] ~endturn~);,YES
Slime ,Fighters lose one dice|when poisoned.,slime,10|-20,var scr = ~if (getstatusself(POISON) > 0 && self.getvar(\~mqslimeremix\~) != 1) {self.setvar(\~mqslimeremix\~[;] 1); self.extradice--;} else if (getstatusself(POISON) <= 0 && self.getvar(\~mqslimeremix\~) == 1) {self.setvar(\~mqslimeremix\~[;] 0); self.extradice++;}~; Rules.addextrascript(scr[;] ~beforestartturn~); Rules.addextrascript(scr[;] ~endturn~);,YES
Wisp ,On the first turn[;] roll 2 extra|dice and get [vanish]Vanish.,wisp,20|-60,Rules.addextrascript(~self.extradice += 2; inflictself(VANISH); self.setvar(\~mqwispremix\~[;] 1);~[;] ~startcombat~); Rules.addextrascript(~if (target.getvar(\~mqwispremix\~) == 1) {target.setvar(\~mqwispremix\~[;] 0); target.extradice -= 2;}~[;] ~endturn~);,YES
Sneezy ,When a countdown lowers[;]|all countdowns lower by 1.,sneezey,-20|-10,Rules.addplayerinnatestatus(~mqsneezyrule~[;] 1); Rules.addenemyinnatestatus(~mqsneezyrule~[;] 1);,YES
Rat King ,Everyone is weak to poison.,ratking,-60|-10,self.innate.push(~weakpoison~); Rules.addextrascript(~target.innate.push(\~weakpoison\~); new elements.Skill(\~mqelementalresistancefixboth\~).execute(self[;] target);~[;] ~startcombat~);,YES
Kraken ,All equipment effects are|randomized on the first turn.,kraken,-80|-60,Rules.addextrascript(~inflict(\~mqinsanity\~[;] 99); inflictself(\~mqinsanity\~[;] 99); new elements.Skill(\~mqinsanity\~).execute(self[;] target); new elements.Skill(\~mqinsanity\~).execute(target[;] self);~[;] ~startcombat~);,YES
Hothead ,All dice are [fire]Burning|on the first turn.,hothead,-30|-20,Rules.addextrascript(~inflict(FIRE[;] ALL); inflictself(FIRE[;] ALL);~[;] ~startcombat~);,YES
Pirate ,[recycle]Re-Equip regains dice[;] not items.,pirate,-60|-20,Rules.setalternate(REEQUIPNEXT);,YES
Rotten Apple ,Everyone loses 50% health.,applemimic,0|0,Rules.enemyhpadjust = 0.5; Rules.hpchangeonlevelup = 2; if (self.getvar(~rotten_apple_applied~) != 1) {self.hp /= 2; self.maxhp /= 2; self.setvar(~rotten_apple_applied~[;] 1);},YES
Stereohead ,Weakened equipment has no effect|for you and the enemies.,stereohead,0|0,Rules.addextrascript(~for (eq in self.equipment) eq.weakentype = \~noeffect\~;~[;] ~beforestartturn~); Rules.addextrascript(~for (eq in self.equipment) eq.weakentype = \~noeffect\~;~[;] ~endturn~);,YES
Keymaster ,Everyone must use dice in|the order of rolling.,keymaster,-30|-40,Rules.addplayerinnatestatus(~alternate_lock~[;] 99); Rules.addenemyinnatestatus(~alternate_lock~[;] 99);,YES
Aurora ,Every 3 turns[;] everyone gets|[fire][;] [ice][;] [shock][;] and [lock].,weathergoddess,0|0,Rules.addextrascript(~if ((turn % 3) == 0 && target.hp > 0) {var statuses = [FIRE[;] ICE[;] SHOCK[;] LOCK]; for (status in statuses) {inflict(status); inflictself(status);} sfx(\~_multistatus\~);}~[;] ~beforestartturn~);,YES
Dryad ,Enemies drain [heart]1 health every turn.,forestsprite,0|-50,Rules.addextrascript(~drain(1); sfx(\~_drain\~);~[;] ~endturn~);,YES
Gargoyle ,Each equipment use reduces|dice values by 1.,gargoyle,0|0,var scr = ~for (mydice in self.dicepool) if (mydice.available() && !mydice.intween() && mydice.basevalue > 1) {mydice.basevalue--; mydice.animate(\~\~); var anim = mydice.animation[mydice.animation.length - 1]; anim.addcommand(\~flash\~[;] null[;] 0.1); anim.addcommand(\~shake\~[;] null[;] 0[;] -4);}~; Rules.addextrascript(scr[;] ~playerequipmentuse~); Rules.addextrascript(scr[;] ~enemyequipmentuse~);,YES
Rhino Beetle ,Double attack damage.,beetlewarrior,0|0,Rules.addextrascript(~inflictself(\~mqtimeruntilendcombat\~); var actDoubleDamage = new motion.actuators.SimpleActuator(null[;] 0[;] null); actDoubleDamage.repeat(-1); var funcDoubleDamage = new hscript.Parser().parseString(\~if (getstatusself(\\\~mqtimeruntilendcombat\\\~) <= 0 # self.hp <= 0 # target.hp <= 0) actDoubleDamage._repeat = 0; if (target.getvar(\\\~mqrhinobeetleremix_lasthp\\\~) > target.hp) {var dmg = target.getvar(\\\~mqrhinobeetleremix_lasthp\\\~) - target.hp; attack(dmg); sfxdamage(target[;] dmg);} target.setvar(\\\~mqrhinobeetleremix_lasthp\\\~[;] target.hp); if (self.getvar(\\\~mqrhinobeetleremix_lasthp\\\~) > self.hp) {var dmg = self.getvar(\\\~mqrhinobeetleremix_lasthp\\\~) - self.hp; attackself(dmg); sfxdamage(self[;] dmg);} self.setvar(\\\~mqrhinobeetleremix_lasthp\\\~[;] self.hp);\~); var interp = new hscript.Interp(); interp.variables.set(\~self\~[;] self); interp.variables.set(\~target\~[;] target); interp.variables.set(\~attack\~[;] attack); interp.variables.set(\~attackself\~[;] attackself); interp.variables.set(\~sfxdamage\~[;] sfxdamage); interp.variables.set(\~getstatusself\~[;] getstatusself); interp.variables.set(\~actDoubleDamage\~[;] actDoubleDamage); actDoubleDamage.onRepeat(interp.execute[;] [funcDoubleDamage]); actDoubleDamage.move();~[;] ~startcombat~);,YES
Yeti ,[ice]Freeze also inflicts [lock]Lock.,yeti,0|0,Rules.addplayerinnatestatus(~mqsubzero~); Rules.addenemyinnatestatus(~mqsubzero~);,YES
Gardener ,Weaken increases the damage you take|instead of weakening equipment.,gardener,0|0,Rules.setalternate(~weaken~);,YES
Wicker Man ,Enemies recover [heal]2 health every turn.,wickerman,0|-20,Rules.addextrascript(~attackself(-2); sfx(\~_heal\~);~[;] ~endturn~);,YES
Audrey ,Performing 3 attacks in one|turn inflicts [weaken]1 weaken.,weightlifter,-40|0,Rules.addextrascript(~self.setvar(\~audreylasthp\~[;] target.hp);~[;] ~beforestartturn~); Rules.addextrascript(~self.setvar(\~audreylasthp\~[;] target.hp);~[;] ~endturn~); Rules.addextrascript(~if (target.hp < self.getvar(\~audreylasthp\~)) {inflict(\~mqaudreycombo\~); if (getstatus(\~mqaudreycombo\~) >= 3) {removestatus(\~mqaudreycombo\~[;] ALL); inflict(WEAKEN); sfx(\~_weaken\~);}} self.setvar(\~audreylasthp\~[;] target.hp);~[;] ~playerequipmentuse~); Rules.addextrascript(~self.setvar(\~audreylasthp\~[;] target.hp);~[;] ~beforestartturn~); Rules.addextrascript(~if (target.hp < self.getvar(\~audreylasthp\~)) {inflict(\~mqaudreycombo\~); if (getstatus(\~mqaudreycombo\~) >= 3) {removestatus(\~mqaudreycombo\~[;] ALL); inflict(WEAKEN); sfx(\~_weaken\~);}} self.setvar(\~audreylasthp\~[;] target.hp);~[;] ~enemyequipmentuse~);,YES
Beatrice ,Everyone takes [shock]2 damage for each|[shock]Shock inflicted on them.,queenbee,-40|-30,Rules.addextrascript(~if (getstatusself(SHOCK) > 0) {attackself(2 * getstatusself(SHOCK)[;] SHOCK); sfx(\~_shock\~);}~[;] ~beforestartturn~); Rules.addextrascript(~if (getstatusself(SHOCK) > 0) {attackself(2 * getstatusself(SHOCK)[;] SHOCK); sfx(\~_shock\~);}~[;] ~endturn~);,YES
Marshmallow ,[fire]Burn both on even turns.|[ice]Freeze both on odd turns.,marshmallow,10|-10,Rules.addextrascript(~if ((turn % 2) == 0) {inflictself(FIRE); inflict(FIRE); sfx(\~_fire\~);} else {inflictself(ICE); inflict(ICE); sfx(\~_ice\~);}~[;] ~beforestartturn~);,YES
Magician ,Dice might vanish when using|any piece of equipment.,streetmagician,0|-40,Rules.addextrascript(~var vanished = false; for (mydice in self.dicepool) if (mydice.available() && !mydice.intween() && !vanished && chance(10)) {mydice.animate(\~disappear\~); vanished = true;}~[;] ~playerequipmentuse~); Rules.addextrascript(~var vanished = false; for (mydice in self.dicepool) if (mydice.available() && !mydice.intween() && !vanished && chance(25)) {mydice.animate(\~disappear\~); vanished = true;}~[;] ~enemyequipmentuse~);,YES
The Jester,Lose 2 dice.|Snap is permanently enabled.,_jester,-90|-20,self.dice = 1; self.changelimitbreak(~Match 3~); Rules.addextrascript(~Deck.snapstyle = \~cards\~~[;] ~beforestartturn~);,YES
Alchemist ,Transform into a bear.,potionmixer,-20|-70,beartransform(); Rules.addextrascript(~self.layout = self.layout.DECK;~[;] ~beforestartturn~); addjestercard(~Bear Maul~); addjestercard(~Bear Maul~);,NO
Anima,[flame]Flame and [frost]Frost are now|[anima][red2]A[orange2]n[yellow2]i[green2]m[blue2]a[][;] which behaves like both.,_anima,-70|0,Rules.addplayerinnatestatus(~animagain~ | 1); Rules.addenemyinnatestatus(~animagain~ | 1);,YES
Doublelift,Using the whole deck gives an extra turn.|At the end of the turn[;] gain a [jam]Jam.,_doublelift,-70|0,Rules.addplayerinnatestatus(~doublelift~ | 1);,YES
Convergence,Gain 2 [spellpower]Spell [spellcolor]Power.|Lose 2 [maxmana]Max [maxmanacolor]Mana.,_convergence,-70|0,self.setvar(~spellpower~ | self.getvar(~spellpower~) + 2); Rules.addplayerinnatestatus(~spellpower~[;] self.getvar(~spellpower~)[;] true); if(self.getvar(~concheck~) == 0){self.setvar(~maxmanabuff~ | self.getvar(~maxmanabuff~) - 2); self.setvar(~concheck~ | 1);},YES
Hearth,All equipment gives [flow]Flow.|Lose 1 [manaregen]Mana [edenmanacolor]Regen.,_hearth,-70|0,Rules.addplayerinnatestatus(~hearth~[;] 1[;] true); if(self.getvar(~hearthcheck~) == 0){self.setvar(~manaregen~ | self.getvar(~manaregen~) - 1); self.setvar(~hearthcheck~ | 1);},YES
Glimmer,[jolt]Jolt deals half damage[;]|but increases by 1 when activated.,_glimmer,-70|0,Rules.addplayerinnatestatus(~glimmer~); Rules.addenemyinnatestatus(~glimmer~);,YES
Phalanx,Using equipment gives [guard]1 Guard[;] but|[guard]Guard doesn't persist between turns.,_phalanx,-70|0,Rules.addplayerinnatestatus(~phalanx~); Rules.addenemyinnatestatus(~phalanx~);,YES
Miseri,Inflicting [toxin]Toxin also inflicts [fragile]Fragile.,_miseri,-70|20,Rules.addplayerinnatestatus(~miseri~); Rules.addenemyinnatestatus(~miseri~);,YES
Kinesys,[push]Push and [pull]Pull activate twice.,_kinesys,-70|0,Rules.addplayerinnatestatus(~pusher~); Rules.addenemyinnatestatus(~pusher~); Rules.addplayerinnatestatus(~puller~); Rules.addenemyinnatestatus(~puller~);,YES
Hexawan,You are immune to [anchor]Anchor.|Lose 1 [maxmana]Max [maxmanacolor]Mana.,_hexawan,-70|0,self.setvar(~hexawan~ | 1); if(self.getvar(~hexcheck~) == 0){self.setvar(~maxmanabuff~ | self.getvar(~maxmanabuff~) - 1); self.setvar(~hexcheck~ | 1);},YES
Slashfik,Using spells gives you [combo]Combo.|[nonspell]Non-spells use it to [sword]attack.,_slashfik,-70|0,self.setvar(~slashfik~ | 1); Rules.addplayerinnatestatus(~slashfik~);,YES
